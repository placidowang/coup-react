{"ast":null,"code":"const initialState = {\n  id: NaN,\n  gameOver: false,\n  username: Math.random().toString(36).slice(2, 5),\n  // username: '',\n  hand: [],\n  coins: 2,\n  // actions: ['Income', 'Foreign Aid', 'Coup', 'Tax', 'Assassinate', 'Exchange', 'Steal'],\n  actions: {\n    income: {\n      character: null,\n      action: 'Income',\n      effect: 'Take 1 coin',\n      counteraction: null\n    },\n    foreignAid: {\n      character: null,\n      action: 'Foreign Aid',\n      effect: 'Take 2 coins',\n      counteraction: null\n    },\n    coup: {\n      character: null,\n      action: 'Coup',\n      effect: 'Pay 7 coins - Choose player to lose influence',\n      counteraction: null\n    },\n    tax: {\n      character: 'Duke',\n      action: 'Tax',\n      effect: 'Take 3 coins',\n      counteraction: 'Blocks Foreign Aid'\n    },\n    assassinate: {\n      character: 'Assassin',\n      action: 'Assassinate',\n      effect: 'Pay 3 coins - Choose player to lose influence',\n      counteraction: null\n    },\n    exchange: {\n      character: 'Ambassador',\n      action: 'Exchange',\n      effect: 'Exchange cards with Court Deck',\n      counteraction: 'Blocks stealing'\n    },\n    steal: {\n      character: 'Captain',\n      action: 'Steal',\n      effect: 'Take 2 coins from another player',\n      counteraction: 'Blocks stealing'\n    },\n    contessa: {\n      character: 'Contessa',\n      action: 'X',\n      effect: null,\n      counteraction: 'Blocks assassination'\n    }\n  } // myTurn: false, // unnecessary so far, just check if props.player.id === props.activePlayer.id\n\n};\nexport default function playerReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'setId':\n      return { ...state,\n        id: action.id\n      };\n\n    case 'setUsername':\n      return { ...state,\n        username: action.username\n      };\n\n    case 'getNewCard':\n      state.hand.push(action.card);\n      return state;\n\n    case 'updateHand':\n      return { ...state,\n        // hand: [...state.hand, ...action.cards]\n        hand: action.cards\n      };\n\n    case 'updateCoins':\n      return { ...state,\n        coins: state.coins + action.amt\n      };\n\n    case 'gameOver':\n      return { ...state,\n        gameOver: true\n      };\n\n    case 'revealCard':\n      // need to create deep clone a la JSON.parse/stringify\n      const revealedCard = JSON.parse(JSON.stringify(state.hand[action.i]));\n      revealedCard.isRevealed = true;\n      const newHand = [...state.hand];\n      newHand[action.i] = revealedCard;\n      return { ...state,\n        hand: newHand\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/flatironstudentaccount/Development/Module 5/coup-react/frontend/src/reducers/playerReducer.js"],"names":["initialState","id","NaN","gameOver","username","Math","random","toString","slice","hand","coins","actions","income","character","action","effect","counteraction","foreignAid","coup","tax","assassinate","exchange","steal","contessa","playerReducer","state","type","push","card","cards","amt","revealedCard","JSON","parse","stringify","i","isRevealed","newHand"],"mappings":"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","sourcesContent":["const initialState = {\n  id: NaN,\n  gameOver: false,\n  username: Math.random().toString(36).slice(2,5),\n  // username: '',\n  hand: [],\n  coins: 2,\n  // actions: ['Income', 'Foreign Aid', 'Coup', 'Tax', 'Assassinate', 'Exchange', 'Steal'],\n  actions: {\n    income: {character: null,\n      action: 'Income',\n      effect: 'Take 1 coin',\n      counteraction: null},\n    foreignAid: {character: null,\n      action: 'Foreign Aid',\n      effect: 'Take 2 coins',\n      counteraction: null},\n    coup: {character: null,\n      action: 'Coup',\n      effect: 'Pay 7 coins - Choose player to lose influence',\n      counteraction: null},\n    tax: {character: 'Duke',\n      action: 'Tax',\n      effect: 'Take 3 coins',\n      counteraction: 'Blocks Foreign Aid'},\n    assassinate: {character: 'Assassin',\n      action: 'Assassinate',\n      effect: 'Pay 3 coins - Choose player to lose influence',\n      counteraction: null},\n    exchange: {character: 'Ambassador',\n      action: 'Exchange',\n      effect: 'Exchange cards with Court Deck',\n      counteraction: 'Blocks stealing'},\n    steal: {character: 'Captain',\n      action: 'Steal',\n      effect: 'Take 2 coins from another player',\n      counteraction: 'Blocks stealing'},\n    contessa: {character: 'Contessa',\n      action: 'X',\n      effect: null,\n      counteraction: 'Blocks assassination'}\n  },\n  // myTurn: false, // unnecessary so far, just check if props.player.id === props.activePlayer.id\n}\n\nexport default function playerReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'setId':\n      return {...state,\n        id: action.id\n      }\n    case 'setUsername':\n      return {...state,\n        username: action.username\n      }\n    case 'getNewCard':\n      state.hand.push(action.card)\n      return state\n    case 'updateHand':\n      return {...state,\n        // hand: [...state.hand, ...action.cards]\n        hand: action.cards\n      }\n    case 'updateCoins':\n      return {...state,\n        coins: state.coins + action.amt\n      }\n    case 'gameOver':\n      return {...state,\n        gameOver: true\n      }\n    case 'revealCard':\n      // need to create deep clone a la JSON.parse/stringify\n      const revealedCard = JSON.parse(JSON.stringify(state.hand[action.i]))\n      revealedCard.isRevealed = true\n      const newHand = [...state.hand]\n      newHand[action.i] = revealedCard\n      return {...state,\n        hand: newHand\n      }\n    default:\n      return state\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}