{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (originalInstance, wrappedInstance) {\n  _config2.default.attributes_to_delegate.forEach(function (attribute) {\n    wrapAttribute(originalInstance, wrappedInstance, attribute);\n  });\n\n  _config2.default.methods_to_delegate.forEach(function (method) {\n    wrapMethod(originalInstance, wrappedInstance, method);\n  });\n};\n\nvar _config = require('../config.json');\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction wrapAttribute(originalInstance, wrappedInstance, attributeName) {\n  wrappedInstance[attributeName] = originalInstance[attributeName];\n}\n\nfunction wrapMethod(OriginalInstance, wrappedInstance, methodName) {\n  wrappedInstance[methodName] = function () {\n    return OriginalInstance[methodName].apply(wrappedInstance, arguments);\n  };\n}\n\nmodule.exports = exports['default'];","map":{"version":3,"sources":["wrapper.js"],"names":["wrappedInstance","originalInstance","OriginalInstance","config","wrapAttribute","wrapMethod"],"mappings":";;;;;;kBA4Be,UAAA,gBAAA,EAAA,eAAA,EAA6C;AAC1DG,EAAAA,QAAAA,CAAAA,OAAAA,CAAAA,sBAAAA,CAAAA,OAAAA,CAAsC,UAAA,SAAA,EAAe;AACnDC,IAAAA,aAAAA,CAAAA,gBAAAA,EAAAA,eAAAA,EAAAA,SAAAA,CAAAA;AADFD,GAAAA;;AAIAA,EAAAA,QAAAA,CAAAA,OAAAA,CAAAA,mBAAAA,CAAAA,OAAAA,CAAmC,UAAA,MAAA,EAAY;AAC7CE,IAAAA,UAAAA,CAAAA,gBAAAA,EAAAA,eAAAA,EAAAA,MAAAA,CAAAA;AADFF,GAAAA;;;AAjCF,IAAA,OAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;;;;;;;;;AAOA,SAAA,aAAA,CAAA,gBAAA,EAAA,eAAA,EAAA,aAAA,EAAyE;AACvEH,EAAAA,eAAAA,CAAAA,aAAAA,CAAAA,GAAiCC,gBAAAA,CAAjCD,aAAiCC,CAAjCD;AACD;;AAOD,SAAA,UAAA,CAAA,gBAAA,EAAA,eAAA,EAAA,UAAA,EAAmE;AACjEA,EAAAA,eAAAA,CAAAA,UAAAA,CAAAA,GAA8B,YAAY;AACxC,WAAOE,gBAAAA,CAAAA,UAAAA,CAAAA,CAAAA,KAAAA,CAAAA,eAAAA,EAAP,SAAOA,CAAP;AADFF,GAAAA;AAGD","sourcesContent":["import config from '../config.json';\n\n/**\n * Wrap a PubNub's attributes\n *\n * @param {string} attributeName\n */\nfunction wrapAttribute(originalInstance, wrappedInstance, attributeName) {\n  wrappedInstance[attributeName] = originalInstance[attributeName];\n}\n\n/**\n * Wrap a PubNub's methods\n *\n * @param methodName\n */\nfunction wrapMethod(OriginalInstance, wrappedInstance, methodName) {\n  wrappedInstance[methodName] = function () {\n    return OriginalInstance[methodName].apply(wrappedInstance, arguments);\n  };\n}\n\n/**\n * Wrap the PubNubReact with PubNub\n *\n * @param originalInstance\n * @param wrappedInstance\n */\nexport default function (originalInstance, wrappedInstance) {\n  config.attributes_to_delegate.forEach((attribute) => {\n    wrapAttribute(originalInstance, wrappedInstance, attribute);\n  });\n\n  config.methods_to_delegate.forEach((method) => {\n    wrapMethod(originalInstance, wrappedInstance, method);\n  });\n}\n"]},"metadata":{},"sourceType":"script"}