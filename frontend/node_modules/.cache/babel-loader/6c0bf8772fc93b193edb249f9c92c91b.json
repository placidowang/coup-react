{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudentaccount/Development/Module 5/mod_5_final_project/frontend/src/containers/GameContainer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Game from '../components/Game';\nimport '../components/Game.css';\nimport Board from '../components/Board';\nimport Swal from \"sweetalert2\"; // import shortid  from 'shortid';\n\nclass GameContainer extends React.Component {\n  constructor(props) {\n    super(props); // // REPLACE with your keys\n    // this.props.pubnub = new PubNubReact({\n    //   publishKey: keys.publishKey, \n    //   subscribeKey: keys.subscribeKey    \n    // });\n\n    this.state = {\n      piece: '',\n      // X or O\n      isPlaying: false,\n      // Set to true when 2 players are in a channel\n      isRoomCreator: false,\n      isDisabled: false,\n      myTurn: false\n    };\n    this.lobbyChannel = null; // Lobby channel\n\n    this.gameChannel = null; // Game channel\n\n    this.roomId = null; // Unique id when player creates a room   \n\n    this.props.pubnub.init(this); // Initialize PubNub\n  } // states\n  // Check that the player is connected to a channel\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    pubnub: state.pubnub,\n    username: state.username\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setUsername: username => dispatch({\n      type: 'setUsername',\n      username: username\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameContainer);","map":{"version":3,"sources":["/Users/flatironstudentaccount/Development/Module 5/mod_5_final_project/frontend/src/containers/GameContainer.js"],"names":["React","connect","Game","Board","Swal","GameContainer","Component","constructor","props","state","piece","isPlaying","isRoomCreator","isDisabled","myTurn","lobbyChannel","gameChannel","roomId","pubnub","init","render","mapStateToProps","username","mapDispatchToProps","dispatch","setUsername","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAO,wBAAP;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB,C,CACA;;AAEA,MAAMC,aAAN,SAA4BL,KAAK,CAACM,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEjB;AACA;AACA;AACA;AACA;;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AACA;AACXC,MAAAA,SAAS,EAAE,KAFA;AAEO;AAClBC,MAAAA,aAAa,EAAE,KAHJ;AAIXC,MAAAA,UAAU,EAAE,KAJD;AAKXC,MAAAA,MAAM,EAAE;AALG,KAAb;AAOA,SAAKC,YAAL,GAAoB,IAApB,CAfiB,CAeS;;AAC1B,SAAKC,WAAL,GAAmB,IAAnB,CAhBiB,CAgBQ;;AACzB,SAAKC,MAAL,GAAc,IAAd,CAjBiB,CAiBG;;AACpB,SAAKT,KAAL,CAAWU,MAAX,CAAkBC,IAAlB,CAAuB,IAAvB,EAlBiB,CAkBa;AAC/B,GApByC,CAqB5C;AAGA;;;AACEC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAKD;;AA/ByC;;AAkC5C,MAAMC,eAAe,GAAIZ,KAAD,IAAW;AACjC,SAAO;AACLS,IAAAA,MAAM,EAAET,KAAK,CAACS,MADT;AAELI,IAAAA,QAAQ,EAAEb,KAAK,CAACa;AAFX,GAAP;AAID,CALD;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,WAAW,EAAIH,QAAD,IAAcE,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAE,aAAP;AAAsBJ,MAAAA,QAAQ,EAAEA;AAAhC,KAAD;AAD/B,GAAP;AAGD,CAJD;;AAMA,eAAerB,OAAO,CAACoB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ClB,aAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\nimport Game from '../components/Game';\nimport '../components/Game.css';\nimport Board from '../components/Board';\nimport Swal from \"sweetalert2\";  \n// import shortid  from 'shortid';\n\nclass GameContainer extends React.Component {\n  constructor(props) {  \n    super(props);\n    // // REPLACE with your keys\n    // this.props.pubnub = new PubNubReact({\n    //   publishKey: keys.publishKey, \n    //   subscribeKey: keys.subscribeKey    \n    // });\n    \n    this.state = {\n      piece: '', // X or O\n      isPlaying: false, // Set to true when 2 players are in a channel\n      isRoomCreator: false,\n      isDisabled: false,\n      myTurn: false,\n    };\n    this.lobbyChannel = null; // Lobby channel\n    this.gameChannel = null; // Game channel\n    this.roomId = null; // Unique id when player creates a room   \n    this.props.pubnub.init(this); // Initialize PubNub\n  }\n// states\n\n\n// Check that the player is connected to a channel\n  render() {\n    return(\n      <div>\n        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    pubnub: state.pubnub,\n    username: state.username\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setUsername: ((username) => dispatch({type: 'setUsername', username: username}))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameContainer)"]},"metadata":{},"sourceType":"module"}