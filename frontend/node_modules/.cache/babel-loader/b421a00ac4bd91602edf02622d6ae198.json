{"ast":null,"code":"import _regeneratorRuntime from\"/Users/flatironstudentaccount/Development/Module 5/coup-react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/flatironstudentaccount/Development/Module 5/coup-react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/flatironstudentaccount/Development/Module 5/coup-react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/flatironstudentaccount/Development/Module 5/coup-react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/flatironstudentaccount/Development/Module 5/coup-react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/flatironstudentaccount/Development/Module 5/coup-react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import Swal from'sweetalert2';var Lobby=/*#__PURE__*/function(_React$Component){_inherits(Lobby,_React$Component);var _super=_createSuper(Lobby);function Lobby(){var _this;_classCallCheck(this,Lobby);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.createLobby=function(){console.log('You are the host!');var roomId=Math.random().toString(36).slice(2,6).toUpperCase();// try again if roomId already exists\n_this.props.pubnub.hereNow({channels:[\"coup-lobby-\".concat(roomId)]}).then(function(channel){if(channel.totalOccupancy===0){_this.props.setHost();_this.subscribeToLobby(roomId);}else{console.log('Trying a different roomId');_this.createLobby();}});};_this.joinLobby=function(e){e.preventDefault();var roomId=e.target[0].value.toUpperCase();if(roomId.length===0){Swal.fire('Please enter a Room ID');return;}_this.props.pubnub.hereNow({channels:[\"coup-lobby-\".concat(roomId)]}).then(function(channel){if(channel.totalOccupancy===0){console.error(\"Room doesn't exist!\");Swal.fire(\"Room doesn't exist!\");}else if(channel.totalOccupancy<5){console.log('You are not the host.');_this.subscribeToLobby(roomId);}else{console.error('Room is full!');Swal.fire('Room is full!');}});};_this.subscribeToLobby=function(roomId){var lobbyChannel=\"coup-lobby-\".concat(roomId);// console.log(`Setting roomId to: ${roomId}`)\n_this.props.setRoomId(roomId);_this.props.joinLobby(lobbyChannel);console.log(\"Joining lobbyChannel: \".concat(lobbyChannel));_this.props.pubnub.subscribe({channels:[lobbyChannel],withPresence:true});_this.props.pubnub.publish({message:{type:'addToPlayers',player:_this.props.player},channel:lobbyChannel});};_this.addToPlayers=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(player){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _this.props.addToPlayers(player);case 2:// console.log(this.props.players)\n_this.props.pubnub.publish({message:{type:'updatePlayers',players:_this.props.players},channel:_this.props.lobbyChannel});case 3:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.updatePlayers=function(players){if(!_this.props.isHost){_this.props.updatePlayers(players);}};_this.startGame=function(){// this.props.pubnub.hereNow({channels: [this.props.lobbyChannel]})\n// .then(channel => {\n// console.log(channel)\nif(!_this.props.isHost){console.log('You are NOT the host!!');Swal.fire('Please wait for the host to start the game.');// } else if (channel.totalOccupancy > 1) {\n}else if(_this.props.players.length>1){console.log('Starting game');// publish message for everyone to start game\n_this.props.pubnub.publish({message:{type:'startGame'},channel:_this.props.lobbyChannel});}else{console.log('Please wait for at least one opponent.');Swal.fire('Please wait for at least one opponent.');}// })\n};_this.playGame=function(){var gameChannel=\"coup-game-\".concat(_this.props.roomId);_this.props.joinGame(gameChannel);_this.props.pubnub.subscribe({channels:[gameChannel],withPresence:true});console.log(\"Joining gameChannel: \".concat(_this.props.gameChannel));console.log('Game start!!');_this.props.playGame();};_this.testMsg=function(msg){_this.props.pubnub.publish({message:{type:'log',text:msg},channel:_this.props.lobbyChannel});};_this.hereNow=function(){_this.props.pubnub.hereNow({channels:[_this.props.lobbyChannel]}).then(console.log);};return _this;}_createClass(Lobby,[{key:\"componentDidMount\",value:function componentDidMount(){console.log('lobby component mounting');}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){var _this2=this;if(this.props.lobbyChannel){this.props.pubnub.getMessage(this.props.lobbyChannel,function(msg){switch(msg.message.type){case'startGame':Swal.close();_this2.playGame();break;case'log':console.log(msg.message.text);break;case'addToPlayers':_this2.props.isHost&&_this2.addToPlayers(msg.message.player);break;case'updatePlayers':_this2.updatePlayers(msg.message.players);break;default:console.error('Unknown lobby message.');console.log(msg);}});}}},{key:\"render\",value:function render(){var _this3=this;// console.log('rendering: ' + this.props.players)\n// this.props.players.map(player => console.log(player.username))\nconsole.log('lobby component rendering');return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",null,\"5 Welcome, \",/*#__PURE__*/React.createElement(\"span\",{style:{color:'red',fontSize:40}},this.props.player.username),\".\"),!this.props.lobbyChannel&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{onClick:this.createLobby,className:\"createLobby\"},\"Create Room\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:function onSubmit(e){return _this3.joinLobby(e);}},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Enter Room ID\"}),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"Join Room\"))),this.props.lobbyChannel&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",null,\"Room ID \",/*#__PURE__*/React.createElement(\"br\",null),this.props.roomId),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"button\",{onClick:this.startGame,className:\"start\"},\"START\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"lobby-player-list-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"lobby-player-list\"},/*#__PURE__*/React.createElement(\"p\",{className:\"lobby-player-list-title\"},\"Players\"),this.props.players.map(function(player){return/*#__PURE__*/React.createElement(\"p\",{key:player.id},player.username);})))));}}]);return Lobby;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{pubnub:state.connectionReducer.pubnub,roomId:state.connectionReducer.roomId,lobbyChannel:state.connectionReducer.lobbyChannel,gameChannel:state.connectionReducer.gameChannel,isHost:state.connectionReducer.isHost,player:state.playerReducer,players:state.gameReducer.players};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{setRoomId:function setRoomId(roomId){return dispatch({type:'setRoomId',roomId:roomId});},setHost:function setHost(){return dispatch({type:'setHost'});},joinLobby:function joinLobby(lobbyChannel){return dispatch({type:'joinLobby',lobbyChannel:lobbyChannel});},joinGame:function joinGame(gameChannel){return dispatch({type:'joinGame',gameChannel:gameChannel});},addToPlayers:function addToPlayers(player){return dispatch({type:'addToPlayers',player:player});},playGame:function playGame(){return dispatch({type:'playGame'});},updatePlayers:function updatePlayers(players){return dispatch({type:'updatePlayers',players:players});}};};export default connect(mapStateToProps,mapDispatchToProps)(Lobby);","map":{"version":3,"sources":["/Users/flatironstudentaccount/Development/Module 5/coup-react/frontend/src/components/Lobby.js"],"names":["React","connect","Swal","Lobby","createLobby","console","log","roomId","Math","random","toString","slice","toUpperCase","props","pubnub","hereNow","channels","then","channel","totalOccupancy","setHost","subscribeToLobby","joinLobby","e","preventDefault","target","value","length","fire","error","lobbyChannel","setRoomId","subscribe","withPresence","publish","message","type","player","addToPlayers","players","updatePlayers","isHost","startGame","playGame","gameChannel","joinGame","testMsg","msg","text","getMessage","close","color","fontSize","username","map","id","Component","mapStateToProps","state","connectionReducer","playerReducer","gameReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport Swal from 'sweetalert2'\n\nclass Lobby extends React.Component {\n  componentDidMount() {\n    console.log('lobby component mounting')\n\n  }\n\n  componentDidUpdate() {\n    if (this.props.lobbyChannel) {\n      this.props.pubnub.getMessage(this.props.lobbyChannel, (msg) => {\n        switch (msg.message.type) {\n          case 'startGame':\n            Swal.close()\n            this.playGame()\n            break\n          case 'log':\n            console.log(msg.message.text)\n            break\n          case 'addToPlayers':\n            this.props.isHost &&\n              this.addToPlayers(msg.message.player)\n            break\n          case 'updatePlayers':\n            this.updatePlayers(msg.message.players)\n            break\n          default:\n            console.error('Unknown lobby message.')\n            console.log(msg)\n        }\n      })\n    }\n  }\n\n  createLobby = () => {\n    console.log('You are the host!')\n    const roomId = Math.random().toString(36).slice(2,6).toUpperCase()\n\n    // try again if roomId already exists\n    this.props.pubnub.hereNow({channels: [`coup-lobby-${roomId}`]})\n    .then(channel => {\n      if (channel.totalOccupancy === 0) {\n        this.props.setHost()\n        this.subscribeToLobby(roomId)\n      } else {\n        console.log('Trying a different roomId')\n        this.createLobby()\n      }\n    })\n  }\n\n  joinLobby = (e) => {\n    e.preventDefault()\n    const roomId = e.target[0].value.toUpperCase()\n    if (roomId.length === 0) {\n      Swal.fire('Please enter a Room ID')\n      return\n    }\n\n    this.props.pubnub.hereNow({channels: [`coup-lobby-${roomId}`]})\n    .then(channel => {\n      if (channel.totalOccupancy === 0) {\n        console.error(\"Room doesn't exist!\")\n        Swal.fire(\"Room doesn't exist!\")\n      } else if (channel.totalOccupancy < 5) {\n        console.log('You are not the host.')\n        this.subscribeToLobby(roomId)\n      } else {\n        console.error('Room is full!')\n        Swal.fire('Room is full!')\n      }\n    })\n  }\n\n  subscribeToLobby = (roomId) => {\n    const lobbyChannel = `coup-lobby-${roomId}`\n\n    // console.log(`Setting roomId to: ${roomId}`)\n    this.props.setRoomId(roomId)\n    this.props.joinLobby(lobbyChannel)\n\n    console.log(`Joining lobbyChannel: ${lobbyChannel}`)\n    this.props.pubnub.subscribe({\n      channels: [lobbyChannel],\n      withPresence: true\n    })\n    \n    this.props.pubnub.publish({\n      message: {\n        type: 'addToPlayers',\n        player: this.props.player\n      },\n      channel: lobbyChannel\n    })\n  }\n\n  // async/await, just in case\n  addToPlayers = async(player) => {\n    await this.props.addToPlayers(player)\n    // console.log(this.props.players)\n    this.props.pubnub.publish({\n      message: {\n        type: 'updatePlayers',\n        players: this.props.players\n      },\n      channel: this.props.lobbyChannel\n    })\n  }\n\n  updatePlayers = (players) => {\n    if (!this.props.isHost) {\n      this.props.updatePlayers(players)\n    }\n  }\n\n  startGame = () => {\n    // this.props.pubnub.hereNow({channels: [this.props.lobbyChannel]})\n    // .then(channel => {\n      // console.log(channel)\n      if (!this.props.isHost) {\n        console.log('You are NOT the host!!')\n        Swal.fire('Please wait for the host to start the game.')\n      // } else if (channel.totalOccupancy > 1) {\n      } else if (this.props.players.length > 1) {\n        console.log('Starting game')\n\n        // publish message for everyone to start game\n        this.props.pubnub.publish({\n          message: { type: 'startGame' },\n          channel: this.props.lobbyChannel\n        })\n      } else {\n        console.log('Please wait for at least one opponent.')\n        Swal.fire('Please wait for at least one opponent.')\n      }\n    // })\n  }\n\n  playGame = () => {\n    const gameChannel = `coup-game-${this.props.roomId}`\n\n    this.props.joinGame(gameChannel)\n\n    this.props.pubnub.subscribe({\n      channels: [gameChannel],\n      withPresence: true\n    })\n\n    console.log(`Joining gameChannel: ${this.props.gameChannel}`)\n    console.log('Game start!!')\n\n    this.props.playGame()\n  }\n\n  testMsg = (msg) => {\n    this.props.pubnub.publish({\n      message: {type: 'log', text: msg},\n      channel: this.props.lobbyChannel\n    })\n  }\n\n  hereNow = () => {\n    this.props.pubnub.hereNow({\n      channels: [this.props.lobbyChannel]\n    })\n    .then(console.log)\n  }\n\n  render() {\n    // console.log('rendering: ' + this.props.players)\n    // this.props.players.map(player => console.log(player.username))\n    console.log('lobby component rendering')\n    return(\n      <div>\n        <p>5 Welcome, <span style={{color: 'red', fontSize: 40}}>{this.props.player.username}</span>.</p>\n\n        {!this.props.lobbyChannel &&\n          <div>\n            <button onClick={this.createLobby} className='createLobby'>Create Room</button>\n\n            <form onSubmit={(e)=>this.joinLobby(e)}>\n              <input type='text' placeholder='Enter Room ID'/>\n              <button type='submit'>Join Room</button>\n            </form>\n\n          </div>\n        }\n\n        {this.props.lobbyChannel &&\n          <div>\n            <p>Room ID <br/>{this.props.roomId}</p>\n            <br/>\n            <button onClick={this.startGame} className='start'>START</button>\n            <br/>\n            <div className='lobby-player-list-container'>\n              {/* <p>{this.props.player.username + ' (You)'}</p> */}\n              <div className='lobby-player-list'>\n                <p className='lobby-player-list-title'>Players</p>\n                {this.props.players.map(player => <p key={player.id}>{player.username}</p>)}\n              </div>\n            </div>\n\n            {/* <button onClick={() => this.testMsg('i am hostman')}>send him a message</button> */}\n            {/* <button onClick={()=>this.testMsg('hey host')}>msg</button> */}\n            {/* <button onClick={this.hereNow}>who here</button> */}\n\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    pubnub: state.connectionReducer.pubnub,\n    roomId: state.connectionReducer.roomId,\n    lobbyChannel: state.connectionReducer.lobbyChannel,\n    gameChannel: state.connectionReducer.gameChannel,\n    isHost: state.connectionReducer.isHost,\n    player: state.playerReducer,\n    players: state.gameReducer.players,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setRoomId: ((roomId) => dispatch({type: 'setRoomId', roomId: roomId})),\n    setHost: (() => dispatch({type: 'setHost'})),\n    joinLobby: ((lobbyChannel) => dispatch({type: 'joinLobby', lobbyChannel: lobbyChannel})),\n    joinGame: ((gameChannel) => dispatch({type: 'joinGame', gameChannel: gameChannel})),\n    addToPlayers: ((player) => dispatch({type: 'addToPlayers', player: player})),\n    playGame: (() => dispatch({type: 'playGame'})),\n    updatePlayers: ((players) => dispatch({type: 'updatePlayers', players: players})),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Lobby)"]},"metadata":{},"sourceType":"module"}