{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudentaccount/Development/Module 5/mod_5_final_project/frontend/src/containers/Player.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './Player.css';\nimport Card from '../components/Card.js';\n\nclass Player extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.takeAction = action => {\n      console.log(action);\n    };\n  }\n\n  componentDidMount() {// this.props.pubnub.getMessage(this.props.gameChannel, (msg) => {\n    //   switch (msg.message.type) {\n    //     case 'nextTurn':\n    //       this.props.nextTurn()\n    //       console.log(this.props.whosTurnIsIt)\n    //       this.props.setActivePlayer()\n    //       break\n    //     case 'log':\n    //       console.log(msg.message.text)\n    //       break\n    //     default:\n    //       console.error('Unknown player message.')\n    //       console.log(msg)\n    //   }\n    // })\n  }\n\n  componentDidUpdate() {// console.log(this.props.player)\n  }\n\n  // nextTurn = () => {\n  //   this.props.pubnub.publish({\n  //     message: { type: 'nextTurn' },\n  //     channel: this.props.gameChannel\n  //   })\n  // }\n  render() {\n    const player = this.props.player;\n    const actions = [];\n\n    for (const action in this.props.player.actions) {\n      actions.push(this.props.player.actions[action]);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"player-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, player.username), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, \"Current hand: \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, player.hand.map(card => /*#__PURE__*/React.createElement(Card, {\n      card: card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 36\n      }\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"Coins: \", player.coins), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, \"Actions: \", actions.map(action => /*#__PURE__*/React.createElement(\"div\", {\n      key: action.action,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.takeAction(e.target.value),\n      value: action.action,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, action.action)))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    pubnub: state.connectionReducer.pubnub,\n    gameChannel: state.connectionReducer.gameChannel,\n    isHost: state.connectionReducer.isHost,\n    players: state.connectionReducer.players,\n    deck: state.gameReducer.deck,\n    player: state.playerReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    nextTurn: () => dispatch({\n      type: 'nextTurn'\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);","map":{"version":3,"sources":["/Users/flatironstudentaccount/Development/Module 5/mod_5_final_project/frontend/src/containers/Player.js"],"names":["React","connect","Card","Player","Component","takeAction","action","console","log","componentDidMount","componentDidUpdate","render","player","props","actions","push","username","hand","map","card","coins","e","target","value","mapStateToProps","state","pubnub","connectionReducer","gameChannel","isHost","players","deck","gameReducer","playerReducer","mapDispatchToProps","dispatch","nextTurn","type"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport './Player.css'\nimport Card from '../components/Card.js'\n\nclass Player extends React.Component {\n  componentDidMount() {\n    // this.props.pubnub.getMessage(this.props.gameChannel, (msg) => {\n    //   switch (msg.message.type) {\n\n    //     case 'nextTurn':\n    //       this.props.nextTurn()\n    //       console.log(this.props.whosTurnIsIt)\n    //       this.props.setActivePlayer()\n    //       break\n    //     case 'log':\n    //       console.log(msg.message.text)\n    //       break\n    //     default:\n    //       console.error('Unknown player message.')\n    //       console.log(msg)\n    //   }\n    // })\n  }\n  componentDidUpdate() {\n    // console.log(this.props.player)\n  }\n\n  takeAction = (action) => {\n    console.log(action)\n  }\n\n  // nextTurn = () => {\n  //   this.props.pubnub.publish({\n  //     message: { type: 'nextTurn' },\n  //     channel: this.props.gameChannel\n  //   })\n  // }\n\n  render() {\n    const player = this.props.player\n    const actions = []\n    for (const action in this.props.player.actions) {\n      actions.push(this.props.player.actions[action])\n    }\n    return (\n      <div className='player-container'>\n        <p className='player-name'>{player.username}</p>\n        {/* <p>Current hand: {player.hand.map(card => card.name).join(', ')}</p> */}\n        <p>Current hand: </p>\n        <div className='hand'>\n          {player.hand.map(card => <Card card={card} />)}\n        </div>\n        <p>Coins: {player.coins}</p>\n        <div className='actions'>Actions: {actions.map(action => (\n          <div key={action.action}>\n            <button onClick={e => this.takeAction(e.target.value)} value={action.action} >{action.action}</button>\n            {/* <p>{action.effect}</p> */}\n          </div>))}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    pubnub: state.connectionReducer.pubnub,\n    gameChannel: state.connectionReducer.gameChannel,\n    isHost: state.connectionReducer.isHost,\n    players: state.connectionReducer.players,\n    deck: state.gameReducer.deck,\n    player: state.playerReducer,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    nextTurn: (() => dispatch({type: 'nextTurn'})),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Player)"]},"metadata":{},"sourceType":"module"}