{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudentaccount/Development/Module 5/mod_5_final_project/frontend/src/components/Lobby.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nclass Lobby extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.createLobby = () => {\n      console.log('You are the host!');\n      const roomId = Math.random().toString(36).slice(2, 7).toUpperCase();\n      this.props.setHost();\n      this.subscribeToLobby(roomId);\n    };\n\n    this.joinLobby = e => {\n      console.log('You are not the host.');\n      e.preventDefault();\n      const roomId = e.target[0].value.toUpperCase();\n      this.subscribeToLobby(roomId);\n    };\n\n    this.subscribeToLobby = roomId => {\n      const lobbyChannel = `coup-lobby-${roomId}`; // console.log(`Setting roomId to: ${roomId}`)\n\n      this.props.setRoomId(roomId);\n      this.props.joinLobby(lobbyChannel);\n      console.log(`Joining lobbyChannel: ${lobbyChannel}`);\n      this.props.pubnub.subscribe({\n        channels: [lobbyChannel],\n        withPresence: true\n      });\n    };\n\n    this.startGame = () => {\n      if (!this.props.isHost) {\n        console.log('You are NOT the host!!');\n        return;\n      } else {\n        console.log('Starting game'); // publish order for everyone to start game\n\n        this.props.pubnub.publish({\n          message: {\n            type: 'startGame'\n          },\n          channel: this.props.lobbyChannel\n        });\n      }\n    };\n\n    this.playGame = () => {\n      const gameChannel = `coup-game-${this.props.roomId}`;\n      this.props.joinGame(gameChannel);\n      this.props.pubnub.subscribe({\n        channels: [gameChannel],\n        withPresence: true\n      });\n      console.log(`Joining gameChannel: ${this.props.gameChannel}`);\n      console.log('Game start!!');\n      this.props.playGame();\n    };\n\n    this.testMsg = msg => {\n      this.props.pubnub.publish({\n        message: {\n          type: 'log',\n          text: msg\n        },\n        channel: this.props.lobbyChannel\n      });\n    };\n\n    this.hereNow = () => {\n      this.props.pubnub.hereNow({\n        channel: this.props.lobbyChannel\n      }).then(console.log);\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate() {\n    if (this.props.lobbyChannel) {\n      this.props.pubnub.getMessage(this.props.lobbyChannel, msg => {\n        switch (msg.message.type) {\n          case 'startGame':\n            this.playGame();\n            break;\n\n          case 'log':\n            console.log(msg.message.text);\n            break;\n\n          default:\n            console.error('Unknown lobby message.');\n            console.log(msg);\n        }\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, !this.props.lobbyChannel && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, \"Welcome, \", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'red',\n        fontSize: 40\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, this.props.player.username), \".\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.createLobby,\n      className: \"createLobby\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, \"Create Lobby\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => this.joinLobby(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Lobby ID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, \"Join Lobby\"))), this.props.lobbyChannel && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, \"Room ID: \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }), this.props.roomId), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, \"Players: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, this.props.player.username + ' (You)'), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.startGame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 18\n      }\n    }, \"BEGIN\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.testMsg('i am hostman'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, \"send him a message\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.testMsg('hey host'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, \"msg\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.hereNow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, \" who here\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    pubnub: state.connectionReducer.pubnub,\n    roomId: state.connectionReducer.roomId,\n    lobbyChannel: state.connectionReducer.lobbyChannel,\n    gameChannel: state.connectionReducer.gameChannel,\n    isHost: state.connectionReducer.isHost,\n    player: state.playerReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setRoomId: roomId => dispatch({\n      type: 'setRoomId',\n      roomId: roomId\n    }),\n    setHost: () => dispatch({\n      type: 'setHost'\n    }),\n    joinLobby: lobbyChannel => dispatch({\n      type: 'joinLobby',\n      lobbyChannel: lobbyChannel\n    }),\n    joinGame: gameChannel => dispatch({\n      type: 'joinGame',\n      gameChannel: gameChannel\n    }),\n    playGame: () => dispatch({\n      type: 'playGame'\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Lobby);","map":{"version":3,"sources":["/Users/flatironstudentaccount/Development/Module 5/mod_5_final_project/frontend/src/components/Lobby.js"],"names":["React","connect","Lobby","Component","createLobby","console","log","roomId","Math","random","toString","slice","toUpperCase","props","setHost","subscribeToLobby","joinLobby","e","preventDefault","target","value","lobbyChannel","setRoomId","pubnub","subscribe","channels","withPresence","startGame","isHost","publish","message","type","channel","playGame","gameChannel","joinGame","testMsg","msg","text","hereNow","then","componentDidMount","componentDidUpdate","getMessage","error","render","color","fontSize","player","username","mapStateToProps","state","connectionReducer","playerReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n\nclass Lobby extends React.Component {\n  componentDidMount() {\n\n  }\n\n  componentDidUpdate() {\n    if (this.props.lobbyChannel) {\n      this.props.pubnub.getMessage(this.props.lobbyChannel, (msg) => {\n        switch (msg.message.type) {\n          case 'startGame':\n            this.playGame()\n            break\n          case 'log':\n            console.log(msg.message.text)\n            break\n          default:\n            console.error('Unknown lobby message.')\n            console.log(msg)\n        }\n      })\n    }\n  }\n\n  createLobby = () => {\n    console.log('You are the host!')\n    const roomId = Math.random().toString(36).slice(2,7).toUpperCase()\n\n    this.props.setHost()\n    this.subscribeToLobby(roomId)\n  }\n\n  joinLobby = (e) => {\n    console.log('You are not the host.')\n    e.preventDefault()\n    const roomId = e.target[0].value.toUpperCase()\n\n    this.subscribeToLobby(roomId)\n  }\n\n  subscribeToLobby = (roomId) => {\n    const lobbyChannel = `coup-lobby-${roomId}`\n\n    // console.log(`Setting roomId to: ${roomId}`)\n    this.props.setRoomId(roomId)\n    this.props.joinLobby(lobbyChannel)\n\n    console.log(`Joining lobbyChannel: ${lobbyChannel}`)\n    this.props.pubnub.subscribe({\n      channels: [lobbyChannel],\n      withPresence: true\n    })\n  }\n\n  startGame = () => {\n    if (!this.props.isHost) {\n      console.log('You are NOT the host!!')\n      return\n    } else {\n      console.log('Starting game')\n\n      // publish order for everyone to start game\n      this.props.pubnub.publish({\n        message: { type: 'startGame' },\n        channel: this.props.lobbyChannel\n      })\n\n    }\n  }\n\n  playGame = () => {\n    const gameChannel = `coup-game-${this.props.roomId}`\n\n    this.props.joinGame(gameChannel)\n\n    this.props.pubnub.subscribe({\n      channels: [gameChannel],\n      withPresence: true\n    })\n\n    console.log(`Joining gameChannel: ${this.props.gameChannel}`)\n    console.log('Game start!!')\n\n    this.props.playGame()\n  }\n\n  testMsg = (msg) => {\n    this.props.pubnub.publish({\n      message: {type: 'log', text: msg},\n      channel: this.props.lobbyChannel\n    })\n  }\n\n  hereNow = () => {\n    this.props.pubnub.hereNow({\n      channel: this.props.lobbyChannel\n    })\n    .then(console.log)\n  }\n\n  render() {\n    return(\n      <div>\n\n        {!this.props.lobbyChannel &&\n          <div>\n            <p>Welcome, <span style={{color: 'red', fontSize: 40}}>{this.props.player.username}</span>.</p>\n            <button onClick={this.createLobby} className='createLobby'>Create Lobby</button>\n\n            <form onSubmit={(e)=>this.joinLobby(e)}>\n              <input type='text' placeholder='Enter Lobby ID'/>\n              <button type='submit'>Join Lobby</button>\n            </form>\n\n\n          </div>\n        }\n\n        {this.props.lobbyChannel &&\n          <div>\n            <p>Room ID: <br/>{this.props.roomId}</p>\n            <p>Players: </p>\n            <p>{this.props.player.username + ' (You)'}</p>\n            <br/><button onClick={this.startGame}>BEGIN</button>\n\n            <button onClick={() => this.testMsg('i am hostman')}>send him a message</button>\n\n            <button onClick={()=>this.testMsg('hey host')}>msg</button>\n\n            <button onClick={this.hereNow}> who here</button>\n\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    pubnub: state.connectionReducer.pubnub,\n    roomId: state.connectionReducer.roomId,\n    lobbyChannel: state.connectionReducer.lobbyChannel,\n    gameChannel: state.connectionReducer.gameChannel,\n    isHost: state.connectionReducer.isHost,\n    player: state.playerReducer,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setRoomId: ((roomId) => dispatch({type: 'setRoomId', roomId: roomId})),\n    setHost: (() => dispatch({type: 'setHost'})),\n    joinLobby: ((lobbyChannel) => dispatch({type: 'joinLobby', lobbyChannel: lobbyChannel})),\n    joinGame: ((gameChannel) => dispatch({type: 'joinGame', gameChannel: gameChannel})),\n    playGame: (() => dispatch({type: 'playGame'})),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Lobby)"]},"metadata":{},"sourceType":"module"}