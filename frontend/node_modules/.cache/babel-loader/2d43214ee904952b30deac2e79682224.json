{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudentaccount/Development/Module 5/mod_5_final_project/frontend/src/components/Lobby.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nclass Lobby extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.createLobby = () => {\n      const roomId = Math.random().toString(36).slice(2, 7).toUpperCase(); // const roomId = 'AAA'\n\n      const lobbyChannel = `react-coup-${roomId}`;\n      this.props.setRoomId(roomId);\n      this.props.createLobby(lobbyChannel);\n      this.props.pubnub.subscribe({\n        channels: [`react-coup-${roomId}`],\n        withPresence: true\n      });\n      this.props.pubnub.addListener({\n        message: msg => {\n          console.log(msg.message.test);\n        }\n      });\n    };\n\n    this.joinLobby = e => {\n      e.preventDefault();\n      const roomId = e.target[0].value.toUpperCase();\n      const lobbyChannel = `react-coup-${roomId}`;\n      this.props.setRoomId(roomId);\n      this.props.joinLobby(lobbyChannel);\n      this.props.pubnub.subscribe({\n        channels: [lobbyChannel],\n        withPresence: true\n      });\n      this.props.pubnub.addListener({\n        message: msg => {\n          console.log(msg.message.test);\n        }\n      });\n    };\n\n    this.startGame = () => {\n      console.log('starting game');\n      this.props.startGame();\n    };\n\n    this.testMsg = msg => {\n      this.props.pubnub.publish({\n        message: {\n          test: msg\n        },\n        channel: this.props.lobbyChannel\n      });\n    };\n\n    this.hereNow = () => {\n      this.props.pubnub.hereNow({\n        channel: this.props.lobbyChannel\n      }).then(console.log);\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate() {\n    // console.log('lobby component updated')\n    // console.log(this.props.pubnub)\n    // console.log(this.props.lobbyChannel)\n    if (this.props.lobbyChannel) {\n      // debugger\n      this.props.pubnub.getMessage(this.props.lobbyChannel, msg => {\n        console.log(msg.message.test);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, !this.props.lobbyChannel && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, \"Welcome, \", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'red',\n        fontSize: 40\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, this.props.username), \".\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.createLobby,\n      className: \"createLobby\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, \"Create Lobby\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => this.joinLobby(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Lobby ID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, \"Join Lobby\"))), this.props.lobbyChannel && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, \"Room ID: \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }), this.props.roomId), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.startGame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 18\n      }\n    }, \"BEGIN\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.testMsg('i am hostman'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, \"send him a message\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.testMsg('hey host'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, \"msg\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.hereNow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, \" who here\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    pubnub: state.connectionReducer.pubnub,\n    roomId: state.connectionReducer.roomId,\n    lobbyChannel: state.connectionReducer.lobbyChannel,\n    username: state.playerReducer.username,\n    isHost: state.connectionReducer.isHost\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setRoomId: roomId => dispatch({\n      type: 'setRoomId',\n      roomId: roomId\n    }),\n    createLobby: lobbyChannel => dispatch({\n      type: 'createLobby',\n      lobbyChannel: lobbyChannel\n    }),\n    joinLobby: lobbyChannel => dispatch({\n      type: 'joinLobby',\n      lobbyChannel: lobbyChannel\n    }),\n    startGame: () => dispatch({\n      type: 'startGame'\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Lobby);","map":{"version":3,"sources":["/Users/flatironstudentaccount/Development/Module 5/mod_5_final_project/frontend/src/components/Lobby.js"],"names":["React","connect","Lobby","Component","createLobby","roomId","Math","random","toString","slice","toUpperCase","lobbyChannel","props","setRoomId","pubnub","subscribe","channels","withPresence","addListener","message","msg","console","log","test","joinLobby","e","preventDefault","target","value","startGame","testMsg","publish","channel","hereNow","then","componentDidMount","componentDidUpdate","getMessage","render","color","fontSize","username","mapStateToProps","state","connectionReducer","playerReducer","isHost","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n\nclass Lobby extends React.Component {\n  componentDidMount() {\n\n  }\n\n  createLobby = () => {\n    const roomId = Math.random().toString(36).slice(2,7).toUpperCase()\n    // const roomId = 'AAA'\n    const lobbyChannel = `react-coup-${roomId}`\n\n    this.props.setRoomId(roomId)\n    this.props.createLobby(lobbyChannel)\n\n    this.props.pubnub.subscribe({\n      channels: [`react-coup-${roomId}`],\n      withPresence: true\n    })\n\n    this.props.pubnub.addListener({\n      message: (msg) => {\n        console.log(msg.message.test)\n      }\n    })\n  }\n\n  joinLobby = (e) => {\n    e.preventDefault()\n    const roomId = e.target[0].value.toUpperCase()\n    const lobbyChannel = `react-coup-${roomId}`\n\n    this.props.setRoomId(roomId)\n    this.props.joinLobby(lobbyChannel)\n\n    this.props.pubnub.subscribe({\n      channels: [lobbyChannel],\n      withPresence: true\n    })\n\n    this.props.pubnub.addListener({\n      message: (msg) => {\n        console.log(msg.message.test)\n      }\n    })\n  }\n\n  startGame = () => {\n    console.log('starting game')\n    this.props.startGame()\n  }\n\n  componentDidUpdate() {\n    // console.log('lobby component updated')\n    // console.log(this.props.pubnub)\n    // console.log(this.props.lobbyChannel)\n    if (this.props.lobbyChannel) {\n      // debugger\n      this.props.pubnub.getMessage(this.props.lobbyChannel, (msg) => {\n        console.log(msg.message.test)\n      })\n    }\n  }\n  \n  testMsg = (msg) => {\n    this.props.pubnub.publish({\n      message: {\n        test: msg\n      },\n      channel: this.props.lobbyChannel\n    })\n\n  }\n\n  hereNow = () => {\n    this.props.pubnub.hereNow({\n      channel: this.props.lobbyChannel\n    })\n    .then(console.log)\n  }\n\n  render() {\n    return(\n      <div>\n        {!this.props.lobbyChannel &&\n          <div>\n            <p>Welcome, <span style={{color: 'red', fontSize: 40}}>{this.props.username}</span>.</p>\n            <button onClick={this.createLobby} className='createLobby'>Create Lobby</button>\n\n            <form onSubmit={(e)=>this.joinLobby(e)}>\n              <input type='text' placeholder='Enter Lobby ID'/>\n              <button type='submit'>Join Lobby</button>\n            </form>\n\n\n          </div>\n        }\n\n        {this.props.lobbyChannel &&\n          <div>\n            <p>Room ID: <br/>{this.props.roomId}</p>\n            <br/><button onClick={this.startGame}>BEGIN</button>\n\n            <button onClick={() => this.testMsg('i am hostman')}>send him a message</button>\n\n            <button onClick={()=>this.testMsg('hey host')}>msg</button>\n\n            <button onClick={this.hereNow}> who here</button>\n\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    pubnub: state.connectionReducer.pubnub,\n    roomId: state.connectionReducer.roomId,\n    lobbyChannel: state.connectionReducer.lobbyChannel,\n\n    username: state.playerReducer.username,\n    isHost: state.connectionReducer.isHost\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setRoomId: ((roomId) => dispatch({type: 'setRoomId', roomId: roomId})),\n    createLobby: ((lobbyChannel) => dispatch({type: 'createLobby', lobbyChannel: lobbyChannel})),\n    joinLobby: ((lobbyChannel) => dispatch({type: 'joinLobby', lobbyChannel: lobbyChannel})),\n    startGame: (() => dispatch({type: 'startGame'})),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Lobby)"]},"metadata":{},"sourceType":"module"}