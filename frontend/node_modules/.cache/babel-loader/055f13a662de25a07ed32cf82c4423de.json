{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudentaccount/Development/Module 5/mod_5_final_project/frontend/src/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport PubNubReact from 'pubnub-react';\nimport keys from './PubNub-keys.js'; // import { BrowserRouter, Switch, Route } from 'react-router-dom'\n\nimport \"typeface-roboto\";\nimport \"typeface-muli\";\nimport GameContainer from './containers/GameContainer.js';\nimport Swal from 'sweetalert2';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setUsername = e => {\n      e.preventDefault();\n      const username = e.target[0].value;\n\n      if (username !== \"\") {\n        this.props.setUsername(username);\n      } else {\n        Swal.fire('Please enter a username!');\n        console.error('Please enter a username.');\n      }\n    };\n\n    this.pubnub = new PubNubReact({\n      publishKey: keys.publishKey,\n      subscribeKey: keys.subscribeKey\n    });\n    const id = Math.random().toString(36).slice(2, 12);\n    this.props.setId(id);\n    this.pubnub.setUUID(id);\n    this.pubnub.init(this);\n  }\n\n  componentDidMount() {\n    this.props.initPubnub(this.pubnub);\n  }\n\n  componentWillUnmount() {\n    this.props.pubnub.unsubscribe({\n      channels: [this.props.lobbyChannel, this.props.gameChannel]\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, !this.props.username && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, \"COUP REACT\"), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontSize: '24px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, \"Enter name to play\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => this.setUsername(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Set Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, \"Let's go!\"))), this.props.username && /*#__PURE__*/React.createElement(GameContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    pubnub: state.connectionReducer.pubnub,\n    lobbyChannel: state.connectionReducer.lobbyChannel,\n    gameChannel: state.connectionReducer.gameChannel,\n    username: state.playerReducer.username\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initPubnub: pubnub => dispatch({\n      type: 'initPubnub',\n      pubnub: pubnub\n    }),\n    setId: id => dispatch({\n      type: 'setId',\n      id: id\n    }),\n    setUsername: username => dispatch({\n      type: 'setUsername',\n      username: username\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/flatironstudentaccount/Development/Module 5/mod_5_final_project/frontend/src/App.js"],"names":["React","connect","PubNubReact","keys","GameContainer","Swal","App","Component","constructor","props","setUsername","e","preventDefault","username","target","value","fire","console","error","pubnub","publishKey","subscribeKey","id","Math","random","toString","slice","setId","setUUID","init","componentDidMount","initPubnub","componentWillUnmount","unsubscribe","channels","lobbyChannel","gameChannel","render","fontSize","mapStateToProps","state","connectionReducer","playerReducer","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\nimport './App.css';\nimport PubNubReact from 'pubnub-react';\nimport keys from './PubNub-keys.js'\n// import { BrowserRouter, Switch, Route } from 'react-router-dom'\n\nimport \"typeface-roboto\";\nimport \"typeface-muli\"\n\nimport GameContainer from './containers/GameContainer.js'\nimport Swal from 'sweetalert2';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.pubnub = new PubNubReact({\n      publishKey: keys.publishKey, \n      subscribeKey: keys.subscribeKey    \n    })\n    const id = Math.random().toString(36).slice(2,12)\n    this.props.setId(id)\n    this.pubnub.setUUID(id)\n    this.pubnub.init(this)\n  }\n\n  componentDidMount() {\n    this.props.initPubnub(this.pubnub)\n  }\n\n  componentWillUnmount() {\n    this.props.pubnub.unsubscribe({\n      channels: [this.props.lobbyChannel, this.props.gameChannel]\n    })\n  }\n\n  setUsername = (e) => {\n    e.preventDefault()\n    const username = e.target[0].value\n    if (username !== \"\") {\n      this.props.setUsername(username)\n    } else {\n      Swal.fire('Please enter a username!')\n      console.error('Please enter a username.')\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {!this.props.username && \n          <div>\n            <p className='title'>COUP REACT</p>\n            <p style={{fontSize: '24px'}}>Enter name to play</p>\n            <form onSubmit={e => this.setUsername(e)}>\n              <input type='text' placeholder='Set Username'/>\n              <button type='submit'>Let's go!</button>\n            </form>\n          </div>\n        }\n\n        {this.props.username &&\n          <GameContainer />\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    pubnub: state.connectionReducer.pubnub,\n    lobbyChannel: state.connectionReducer.lobbyChannel,\n    gameChannel: state.connectionReducer.gameChannel,\n    username: state.playerReducer.username,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    initPubnub: ((pubnub) => dispatch({type: 'initPubnub', pubnub: pubnub})),\n    setId: ((id) => dispatch({type: 'setId', id: id})),\n    setUsername: ((username) => dispatch({type: 'setUsername', username: username})),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}