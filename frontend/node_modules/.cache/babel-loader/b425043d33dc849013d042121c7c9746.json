{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _pubnub = require('pubnub');\n\nvar _pubnub2 = _interopRequireDefault(_pubnub);\n\nvar _immutabilityHelper = require('immutability-helper');\n\nvar _immutabilityHelper2 = _interopRequireDefault(_immutabilityHelper);\n\nvar _wrapper = require('./wrapper');\n\nvar _wrapper2 = _interopRequireDefault(_wrapper);\n\nvar _autoload = require('./autoload');\n\nvar _autoload2 = _interopRequireDefault(_autoload);\n\nvar _broadcast = require('./broadcast');\n\nvar _modules = require('./modules');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar PubNubReact = function () {\n  function PubNubReact(config) {\n    _classCallCheck(this, PubNubReact);\n\n    var instance = new _pubnub2.default(config);\n    (0, _wrapper2.default)(instance, this);\n    this._pubnubInstance = instance;\n    this._autoload = new _autoload2.default();\n  }\n\n  _createClass(PubNubReact, [{\n    key: 'init',\n    value: function init(component) {\n      if (!component.state) {\n        component.state = {\n          pn_messages: {},\n          pn_status: {},\n          pn_presence: {}\n        };\n      } else {\n        component.state = (0, _immutabilityHelper2.default)(component.state, {\n          $merge: {\n            pn_status: {},\n            pn_messages: {},\n            pn_presence: {}\n          }\n        });\n      }\n\n      this._component = component;\n      this._broadcast = new _broadcast.Broadcast();\n      this._listener = {};\n      this._keepMessages = {};\n      this.addListener(this._listener);\n\n      this._autoload.initialize(this);\n\n      this.getPresence = _modules.getPresence.bind(this);\n      this.getMessage = _modules.getMessage.bind(this);\n      this.getStatus = _modules.getStatus.bind(this);\n      this.clean = _modules.clean.bind(this);\n      this.release = _modules.release.bind(this);\n    }\n  }, {\n    key: 'subscribe',\n    value: function subscribe(args) {\n      this._pubnubInstance.subscribe(args);\n\n      this._autoload.enableLoad(args);\n    }\n  }, {\n    key: 'unsubscribe',\n    value: function unsubscribe(args) {\n      this._pubnubInstance.unsubscribe(args);\n\n      this._autoload.disableLoad(args);\n    }\n  }, {\n    key: 'getOriginalInstance',\n    value: function getOriginalInstance() {\n      if (this._pubnubInstance) {\n        return this._pubnubInstance;\n      } else {\n        throw new ReferenceError('Pubnub default instance is not initialized yet. Invoke #init() method first.');\n      }\n    }\n  }]);\n\n  return PubNubReact;\n}();\n\nexports.default = PubNubReact;\nmodule.exports = exports['default'];","map":{"version":3,"sources":["pubnub-react.js"],"names":["PubNubReact","instance","PubNub","Autoload","component","pn_messages","pn_status","pn_presence","$merge","Broadcast","getPresence","getMessage","getStatus","clean","release","args"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;;;AACA,IAAA,mBAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;;;;;;;;;;;;;IAEqBA,W;AACnB,WAAA,WAAA,CAAA,MAAA,EAAoB;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,WAAA,CAAA;;AAClB,QAAIC,QAAAA,GAAW,IAAIC,QAAAA,CAAJ,OAAA,CAAf,MAAe,CAAf;AACA,KAAA,GAAA,SAAA,CAAA,OAAA,EAAA,QAAA,EAAA,IAAA;AAEA,SAAA,eAAA,GAAA,QAAA;AACA,SAAA,SAAA,GAAiB,IAAIC,UAAAA,CAArB,OAAiB,EAAjB;AACD;;;;yBAOIC,S,EAAW;AACd,UAAI,CAACA,SAAAA,CAAL,KAAA,EAAsB;AACpBA,QAAAA,SAAAA,CAAAA,KAAAA,GAAkB;AAAEC,UAAAA,WAAAA,EAAF,EAAA;AAAmBC,UAAAA,SAAAA,EAAnB,EAAA;AAAkCC,UAAAA,WAAAA,EAApDH;AAAkB,SAAlBA;AADF,OAAA,MAEO;AACLA,QAAAA,SAAAA,CAAAA,KAAAA,GAAkB,CAAA,GAAA,oBAAA,CAAA,OAAA,EAAOA,SAAAA,CAAP,KAAA,EAAwB;AAAEI,UAAAA,MAAAA,EAAQ;AAAEF,YAAAA,SAAAA,EAAF,EAAA;AAAiBD,YAAAA,WAAAA,EAAjB,EAAA;AAAkCE,YAAAA,WAAAA,EAAtFH;AAAoD;AAAV,SAAxB,CAAlBA;AACD;;AAED,WAAA,UAAA,GAAA,SAAA;AACA,WAAA,UAAA,GAAkB,IAAIK,UAAAA,CAAtB,SAAkB,EAAlB;AACA,WAAA,SAAA,GAAA,EAAA;AACA,WAAA,aAAA,GAAA,EAAA;AAEA,WAAA,WAAA,CAAiB,KAAjB,SAAA;;AACA,WAAA,SAAA,CAAA,UAAA,CAAA,IAAA;;AAEA,WAAA,WAAA,GAAmBC,QAAAA,CAAAA,WAAAA,CAAAA,IAAAA,CAAnB,IAAmBA,CAAnB;AACA,WAAA,UAAA,GAAkBC,QAAAA,CAAAA,UAAAA,CAAAA,IAAAA,CAAlB,IAAkBA,CAAlB;AACA,WAAA,SAAA,GAAiBC,QAAAA,CAAAA,SAAAA,CAAAA,IAAAA,CAAjB,IAAiBA,CAAjB;AACA,WAAA,KAAA,GAAaC,QAAAA,CAAAA,KAAAA,CAAAA,IAAAA,CAAb,IAAaA,CAAb;AACA,WAAA,OAAA,GAAeC,QAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CAAf,IAAeA,CAAf;AACD;;;8BAOSC,I,EAAM;AACd,WAAA,eAAA,CAAA,SAAA,CAAA,IAAA;;AACA,WAAA,SAAA,CAAA,UAAA,CAAA,IAAA;AACD;;;gCAOWA,I,EAAM;AAChB,WAAA,eAAA,CAAA,WAAA,CAAA,IAAA;;AACA,WAAA,SAAA,CAAA,WAAA,CAAA,IAAA;AACD;;;0CAOqB;AACpB,UAAI,KAAJ,eAAA,EAA0B;AACxB,eAAO,KAAP,eAAA;AADF,OAAA,MAEO;AACL,cAAM,IAAA,cAAA,CAAN,8EAAM,CAAN;AACD;AACF;;;;;;kBAnEkBf,W","sourcesContent":["import PubNub from 'pubnub';\nimport update from 'immutability-helper';\nimport wrap from './wrapper';\nimport Autoload from './autoload';\nimport { Broadcast } from './broadcast';\nimport { getStatus, getMessage, getPresence, clean, release } from './modules';\n\nexport default class PubNubReact {\n  constructor(config) {\n    let instance = new PubNub(config);\n    wrap(instance, this);\n\n    this._pubnubInstance = instance;\n    this._autoload = new Autoload();\n  }\n\n  /**\n   * Set the react's states to invoke a new render process when a new real time message is received\n   *\n   * @param {component} args\n   */\n  init(component) {\n    if (!component.state) {\n      component.state = { pn_messages: {}, pn_status: {}, pn_presence: {} };\n    } else {\n      component.state = update(component.state, { $merge: { pn_status: {}, pn_messages: {}, pn_presence: {} } });\n    }\n\n    this._component = component;\n    this._broadcast = new Broadcast();\n    this._listener = {};\n    this._keepMessages = {};\n\n    this.addListener(this._listener);\n    this._autoload.initialize(this);\n\n    this.getPresence = getPresence.bind(this);\n    this.getMessage = getMessage.bind(this);\n    this.getStatus = getStatus.bind(this);\n    this.clean = clean.bind(this);\n    this.release = release.bind(this);\n  }\n\n  /**\n   * Wrap the subscribe method to enable trigger events to the broadcast\n   *\n   * @param {object} args\n   */\n  subscribe(args) {\n    this._pubnubInstance.subscribe(args);\n    this._autoload.enableLoad(args);\n  }\n\n  /**\n   * Wrap the unsubscribe method to disable the trigger events to the broadcast\n   *\n   * @param args\n   */\n  unsubscribe(args) {\n    this._pubnubInstance.unsubscribe(args);\n    this._autoload.disableLoad(args);\n  }\n\n  /**\n   * Get the PubNub instance wrapped or throw an exception if this is not instanced yet\n   *\n   * @returns {PubNub|*|null}\n   */\n  getOriginalInstance() {\n    if (this._pubnubInstance) {\n      return this._pubnubInstance;\n    } else {\n      throw new ReferenceError('Pubnub default instance is not initialized yet. Invoke #init() method first.');\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}