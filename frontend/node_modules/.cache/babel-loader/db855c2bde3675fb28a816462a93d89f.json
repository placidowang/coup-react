{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudentaccount/Development/Module 5/mod_5_final_project/frontend/src/components/Lobby.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nclass Lobby extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.createLobby = () => {\n      console.log('You are the host!');\n      const roomId = Math.random().toString(36).slice(2, 7).toUpperCase();\n      this.props.setHost();\n      this.subscribeToLobby(roomId);\n    };\n\n    this.joinLobby = e => {\n      // need to get current list of players check if there's already 5 players\n      console.log('You are not the host.');\n      e.preventDefault();\n      const roomId = e.target[0].value.toUpperCase();\n      this.props.pubnub.hereNow({\n        channel: `coup-lobby-${roomId}`\n      }).then(console.log); // this.subscribeToLobby(roomId)\n    };\n\n    this.subscribeToLobby = roomId => {\n      const lobbyChannel = `coup-lobby-${roomId}`; // console.log(`Setting roomId to: ${roomId}`)\n\n      this.props.setRoomId(roomId);\n      this.props.joinLobby(lobbyChannel);\n      console.log(`Joining lobbyChannel: ${lobbyChannel}`);\n      this.props.pubnub.subscribe({\n        channels: [lobbyChannel],\n        withPresence: true\n      });\n      this.props.pubnub.publish({\n        message: {\n          type: 'addToPlayers',\n          player: this.props.player\n        },\n        channel: lobbyChannel\n      });\n    };\n\n    this.addToPlayers = player => {\n      if (this.props.isHost) {\n        this.props.addToPlayers(player); // console.log(this.props.players)\n\n        this.setState({}); // necessary to rerender playerlist? why not just updating reducer? is it because it's pushing player into array?\n      }\n    };\n\n    this.startGame = () => {\n      if (!this.props.isHost) {\n        console.log('You are NOT the host!!');\n        return;\n      } else {\n        console.log('Starting game'); // publish order for everyone to start game\n\n        this.props.pubnub.publish({\n          message: {\n            type: 'startGame'\n          },\n          channel: this.props.lobbyChannel\n        });\n      }\n    };\n\n    this.playGame = () => {\n      const gameChannel = `coup-game-${this.props.roomId}`;\n      this.props.joinGame(gameChannel);\n      this.props.pubnub.subscribe({\n        channels: [gameChannel],\n        withPresence: true\n      });\n      console.log(`Joining gameChannel: ${this.props.gameChannel}`);\n      console.log('Game start!!');\n      this.props.playGame();\n    };\n\n    this.testMsg = msg => {\n      this.props.pubnub.publish({\n        message: {\n          type: 'log',\n          text: msg\n        },\n        channel: this.props.lobbyChannel\n      });\n    };\n\n    this.hereNow = () => {\n      this.props.pubnub.hereNow({\n        channels: this.props.lobbyChannel\n      }).then(console.log);\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate() {\n    if (this.props.lobbyChannel) {\n      this.props.pubnub.getMessage(this.props.lobbyChannel, msg => {\n        switch (msg.message.type) {\n          case 'startGame':\n            this.playGame();\n            break;\n\n          case 'log':\n            console.log(msg.message.text);\n            break;\n\n          case 'addToPlayers':\n            this.addToPlayers(msg.message.player);\n            break;\n\n          default:\n            console.error('Unknown lobby message.');\n            console.log(msg);\n        }\n      });\n    }\n  }\n\n  render() {\n    // console.log('rendering: ' + this.props.players)\n    // this.props.players.map(player => console.log(player.username))\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, !this.props.lobbyChannel && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, \"Welcome, \", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'red',\n        fontSize: 40\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, this.props.player.username), \".\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.createLobby,\n      className: \"createLobby\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, \"Create Lobby\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => this.joinLobby(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Lobby ID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, \"Join Lobby\"))), this.props.lobbyChannel && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, \"Room ID: \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }\n    }), this.props.roomId), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, \"Players: \"), this.props.players.map(player => /*#__PURE__*/React.createElement(\"p\", {\n      key: player.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 49\n      }\n    }, player.username))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.startGame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 18\n      }\n    }, \"BEGIN\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.testMsg('i am hostman'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }, \"send him a message\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.testMsg('hey host'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, \"msg\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.hereNow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, \"who here\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    pubnub: state.connectionReducer.pubnub,\n    roomId: state.connectionReducer.roomId,\n    lobbyChannel: state.connectionReducer.lobbyChannel,\n    gameChannel: state.connectionReducer.gameChannel,\n    isHost: state.connectionReducer.isHost,\n    player: state.playerReducer,\n    players: state.gameReducer.players\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setRoomId: roomId => dispatch({\n      type: 'setRoomId',\n      roomId: roomId\n    }),\n    setHost: () => dispatch({\n      type: 'setHost'\n    }),\n    joinLobby: lobbyChannel => dispatch({\n      type: 'joinLobby',\n      lobbyChannel: lobbyChannel\n    }),\n    joinGame: gameChannel => dispatch({\n      type: 'joinGame',\n      gameChannel: gameChannel\n    }),\n    addToPlayers: player => dispatch({\n      type: 'addToPlayers',\n      player: player\n    }),\n    playGame: () => dispatch({\n      type: 'playGame'\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Lobby);","map":{"version":3,"sources":["/Users/flatironstudentaccount/Development/Module 5/mod_5_final_project/frontend/src/components/Lobby.js"],"names":["React","connect","Lobby","Component","createLobby","console","log","roomId","Math","random","toString","slice","toUpperCase","props","setHost","subscribeToLobby","joinLobby","e","preventDefault","target","value","pubnub","hereNow","channel","then","lobbyChannel","setRoomId","subscribe","channels","withPresence","publish","message","type","player","addToPlayers","isHost","setState","startGame","playGame","gameChannel","joinGame","testMsg","msg","text","componentDidMount","componentDidUpdate","getMessage","error","render","color","fontSize","username","players","map","id","mapStateToProps","state","connectionReducer","playerReducer","gameReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n\nclass Lobby extends React.Component {\n  componentDidMount() {\n\n  }\n\n  componentDidUpdate() {\n    if (this.props.lobbyChannel) {\n      this.props.pubnub.getMessage(this.props.lobbyChannel, (msg) => {\n        switch (msg.message.type) {\n          case 'startGame':\n            this.playGame()\n            break\n          case 'log':\n            console.log(msg.message.text)\n            break\n          case 'addToPlayers':\n            this.addToPlayers(msg.message.player)\n            break\n          default:\n            console.error('Unknown lobby message.')\n            console.log(msg)\n        }\n      })\n    }\n  }\n\n  createLobby = () => {\n    console.log('You are the host!')\n    const roomId = Math.random().toString(36).slice(2,7).toUpperCase()\n\n    this.props.setHost()\n    this.subscribeToLobby(roomId)\n  }\n\n  joinLobby = (e) => {\n    // need to get current list of players check if there's already 5 players\n    \n    console.log('You are not the host.')\n    e.preventDefault()\n    const roomId = e.target[0].value.toUpperCase()\n    \n    this.props.pubnub.hereNow({channel: `coup-lobby-${roomId}`})\n    .then(console.log)\n    // this.subscribeToLobby(roomId)\n  }\n\n  subscribeToLobby = (roomId) => {\n    const lobbyChannel = `coup-lobby-${roomId}`\n\n    // console.log(`Setting roomId to: ${roomId}`)\n    this.props.setRoomId(roomId)\n    this.props.joinLobby(lobbyChannel)\n\n    console.log(`Joining lobbyChannel: ${lobbyChannel}`)\n    this.props.pubnub.subscribe({\n      channels: [lobbyChannel],\n      withPresence: true\n    })\n    \n    this.props.pubnub.publish({\n      message: {\n        type: 'addToPlayers',\n        player: this.props.player\n      },\n      channel: lobbyChannel\n    })\n  }\n\n  addToPlayers = (player) => {\n    if (this.props.isHost) {\n      this.props.addToPlayers(player)\n      // console.log(this.props.players)\n      this.setState({}) // necessary to rerender playerlist? why not just updating reducer? is it because it's pushing player into array?\n    }\n  }\n\n  startGame = () => {\n    if (!this.props.isHost) {\n      console.log('You are NOT the host!!')\n      return\n    } else {\n      console.log('Starting game')\n\n      // publish order for everyone to start game\n      this.props.pubnub.publish({\n        message: { type: 'startGame' },\n        channel: this.props.lobbyChannel\n      })\n\n    }\n  }\n\n  playGame = () => {\n    const gameChannel = `coup-game-${this.props.roomId}`\n\n    this.props.joinGame(gameChannel)\n\n    this.props.pubnub.subscribe({\n      channels: [gameChannel],\n      withPresence: true\n    })\n\n    console.log(`Joining gameChannel: ${this.props.gameChannel}`)\n    console.log('Game start!!')\n\n    this.props.playGame()\n  }\n\n  testMsg = (msg) => {\n    this.props.pubnub.publish({\n      message: {type: 'log', text: msg},\n      channel: this.props.lobbyChannel\n    })\n  }\n\n  hereNow = () => {\n    this.props.pubnub.hereNow({\n      channels: this.props.lobbyChannel\n    })\n    .then(console.log)\n  }\n\n  render() {\n    // console.log('rendering: ' + this.props.players)\n    // this.props.players.map(player => console.log(player.username))\n    return(\n      <div>\n\n        {!this.props.lobbyChannel &&\n          <div>\n            <p>Welcome, <span style={{color: 'red', fontSize: 40}}>{this.props.player.username}</span>.</p>\n            <button onClick={this.createLobby} className='createLobby'>Create Lobby</button>\n\n            <form onSubmit={(e)=>this.joinLobby(e)}>\n              <input type='text' placeholder='Enter Lobby ID'/>\n              <button type='submit'>Join Lobby</button>\n            </form>\n\n          </div>\n        }\n\n        {this.props.lobbyChannel &&\n          <div>\n            <p>Room ID: <br/>{this.props.roomId}</p>\n            <div className='player-list'>\n            <p>Players: </p>\n              {/* <p>{this.props.player.username + ' (You)'}</p> */}\n              {this.props.players.map(player => <p key={player.id}>{player.username}</p>)}\n            </div>\n\n            <br/><button onClick={this.startGame}>BEGIN</button>\n            <button onClick={() => this.testMsg('i am hostman')}>send him a message</button>\n            <button onClick={()=>this.testMsg('hey host')}>msg</button>\n            <button onClick={this.hereNow}>who here</button>\n\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    pubnub: state.connectionReducer.pubnub,\n    roomId: state.connectionReducer.roomId,\n    lobbyChannel: state.connectionReducer.lobbyChannel,\n    gameChannel: state.connectionReducer.gameChannel,\n    isHost: state.connectionReducer.isHost,\n    player: state.playerReducer,\n    players: state.gameReducer.players,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setRoomId: ((roomId) => dispatch({type: 'setRoomId', roomId: roomId})),\n    setHost: (() => dispatch({type: 'setHost'})),\n    joinLobby: ((lobbyChannel) => dispatch({type: 'joinLobby', lobbyChannel: lobbyChannel})),\n    joinGame: ((gameChannel) => dispatch({type: 'joinGame', gameChannel: gameChannel})),\n    addToPlayers: ((player) => dispatch({type: 'addToPlayers', player: player})),\n    playGame: (() => dispatch({type: 'playGame'})),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Lobby)"]},"metadata":{},"sourceType":"module"}