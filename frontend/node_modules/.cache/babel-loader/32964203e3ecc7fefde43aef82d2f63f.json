{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudentaccount/Development/Module 5/coup-react/frontend/src/containers/Player.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './Player.css';\nimport Card from '../components/Card.js';\nimport Swal from 'sweetalert2';\n\nclass Player extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.isYourTurn = () => {\n      return this.props.activePlayer.id === this.props.player.id;\n    };\n\n    this.handleClickAction = action => {\n      console.log('Attempting to use ' + action);\n\n      switch (action) {\n        case 'Income':\n          if (this.props.treasury >= 1) {\n            this.updateCoins(1); // await this.props.changeTreasury(-amt)\n\n            this.updateTreasury(-1);\n            this.endTurn();\n          } else {\n            Swal.fire('Not enough coins in Treasury!');\n            console.error('Not enough coins in Treasury');\n          }\n\n          break;\n\n        case 'Foreign Aid':\n          if (this.props.treasury >= 2) {\n            this.alertPlayers(action, undefined, 'Duke');\n          } else {\n            Swal.fire('Not enough coins in Treasury!');\n            console.error('Not enough coins in Treasury');\n          }\n\n          break;\n\n        case 'Tax':\n          if (this.props.treasury >= 3) {\n            this.alertPlayers(action, 'Duke', undefined);\n          } else {\n            Swal.fire('Not enough coins in Treasury!');\n            console.error('Not enough coins in Treasury');\n          }\n\n          break;\n\n        case 'Coup':\n          if (this.props.player.coins >= 7) {\n            this.targetPlayer(action);\n          } else {\n            Swal.fire(`You need 7 coins to Coup.`);\n          }\n\n          break;\n\n        case 'Assassinate':\n          if (this.props.player.coins >= 3) {\n            this.targetPlayer(action, 'Assassin', 'Contessa');\n          } else {\n            Swal.fire(`You need 3 coins to Assassinate.`);\n          }\n\n          break;\n\n        case 'Exchange':\n          this.alertPlayers(action, 'Ambassador', undefined);\n          break;\n\n        case 'Steal':\n          this.targetPlayer(action, 'Captain', 'Ambassador', 'Captain');\n          break;\n\n        default:\n          console.error('Invalid player action');\n      }\n    };\n\n    this.updatePlayer = () => {\n      // console.log(this.props.player.coins + 'coins')\n      this.props.pubnub.publish({\n        message: {\n          type: 'updatePlayer',\n          player: this.props.player\n        },\n        channel: this.props.gameChannel\n      });\n    };\n\n    this.updateTreasury = amt => {\n      // console.log(this.props.treasury)\n      this.props.pubnub.publish({\n        message: {\n          type: 'updateTreasury',\n          treasury: this.props.treasury + amt\n        },\n        channel: this.props.gameChannel\n      });\n    };\n\n    this.updateCoins = async amt => {\n      await this.props.updateCoins(amt);\n      this.updatePlayer();\n    };\n\n    this.targetPlayer = (action, associatedCard = undefined, ...counterCards) => {\n      console.log(`Using ${action}. Choose a player to target.`); // swal with buttons for now, can later convert to onClick opponent div w/ hover effect\n\n      Swal.fire({\n        title: `Choose an opponent to use ${action} on.`,\n        showConfirmButton: false,\n        showCancelButton: true,\n        allowOutsideClick: false,\n        timer: 10000,\n        timerProgressBar: true,\n        onBeforeOpen: () => {\n          // console.log(this.props.players)\n          // const actionsDiv = document.querySelector('.swal2-actions')\n          const actionsDiv = Swal.getActions();\n          const opponents = this.props.players.filter(player => player.id !== this.props.player.id && !player.gameOver);\n          opponents.forEach(opponent => {\n            const btn = document.createElement('button');\n            btn.innerText = opponent.username;\n            btn.className = \"swal2-confirm swal2-styled\"; // let id = opponent.id\n\n            btn.addEventListener('click', () => {\n              console.log(opponent.id);\n              Swal.close();\n              this.props.pubnub.publish({\n                message: {\n                  type: 'target',\n                  action: action,\n                  associatedCard: associatedCard,\n                  counterCards: counterCards,\n                  targetPlayerId: opponent.id\n                },\n                channel: this.props.gameChannel\n              });\n            });\n            actionsDiv.append(btn);\n          });\n        }\n      });\n    };\n\n    this.alertPlayers = (action, associatedCard, counterCard) => {\n      this.props.pubnub.publish({\n        message: {\n          type: 'alert',\n          // fromPlayer: this.props.player,\n          action: action,\n          // counterAction: counterAction,\n          // message: msg,\n          associatedCard: associatedCard,\n          counterCard: counterCard\n        },\n        channel: this.props.gameChannel\n      });\n    };\n\n    this.endTurn = () => {\n      this.props.pubnub.publish({\n        message: {\n          type: 'endTurn'\n        },\n        channel: this.props.gameChannel\n      });\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate() {// console.log(this.props.player)\n  }\n\n  render() {\n    const player = this.props.player;\n    const actions = [];\n\n    for (const action in this.props.player.actions) {\n      actions.push(this.props.player.actions[action]);\n    }\n\n    console.log(actions);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-name-hand-coin-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-name-coins-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"player-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }, player.username), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"coins\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }, \"Coins: \", player.coins)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-hand-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }, \"Hand\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-hand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, player.hand.map(card => /*#__PURE__*/React.createElement(Card, {\n      key: card.id,\n      card: card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 40\n      }\n    }))))), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }, \"header 1\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }\n    }, \"header 2\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }, \"action 1\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }\n    }, \"action 1 description\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    }, \"action 2\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }\n    }, \"action 2 description\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }, \"action 3\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    }, \"action 3 description\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }\n    }, \"action 4\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }\n    }, \"action 4 description\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }\n    }, \"action 5\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }\n    }, \"action 5 description\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    pubnub: state.connectionReducer.pubnub,\n    gameChannel: state.connectionReducer.gameChannel,\n    isHost: state.connectionReducer.isHost,\n    players: state.gameReducer.players,\n    deck: state.gameReducer.deck,\n    treasury: state.gameReducer.treasury,\n    player: state.playerReducer,\n    activePlayer: state.gameReducer.activePlayer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    endTurn: () => dispatch({\n      type: 'endTurn'\n    }),\n    updateCoins: amt => dispatch({\n      type: 'updateCoins',\n      amt: amt\n    }),\n    changeTreasury: amt => dispatch({\n      type: 'changeTreasury',\n      amt: amt\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);","map":{"version":3,"sources":["/Users/flatironstudentaccount/Development/Module 5/coup-react/frontend/src/containers/Player.js"],"names":["React","connect","Card","Swal","Player","Component","isYourTurn","props","activePlayer","id","player","handleClickAction","action","console","log","treasury","updateCoins","updateTreasury","endTurn","fire","error","alertPlayers","undefined","coins","targetPlayer","updatePlayer","pubnub","publish","message","type","channel","gameChannel","amt","associatedCard","counterCards","title","showConfirmButton","showCancelButton","allowOutsideClick","timer","timerProgressBar","onBeforeOpen","actionsDiv","getActions","opponents","players","filter","gameOver","forEach","opponent","btn","document","createElement","innerText","username","className","addEventListener","close","targetPlayerId","append","counterCard","componentDidMount","componentDidUpdate","render","actions","push","hand","map","card","mapStateToProps","state","connectionReducer","isHost","gameReducer","deck","playerReducer","mapDispatchToProps","dispatch","changeTreasury"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport './Player.css'\nimport Card from '../components/Card.js'\nimport Swal from 'sweetalert2'\n\nclass Player extends React.Component {\n  componentDidMount() {\n\n  }\n  \n  componentDidUpdate() {\n    // console.log(this.props.player)\n  }\n\n  isYourTurn = () => {\n    return (this.props.activePlayer.id === this.props.player.id)\n  }\n\n  // don't need to account for turn anymore; actions are disabled if it's not your turn\n  handleClickAction = (action) => {\n    console.log('Attempting to use ' + action)\n    switch (action) {\n      case 'Income':\n        if (this.props.treasury >= 1) {\n          this.updateCoins(1)\n          // await this.props.changeTreasury(-amt)\n          this.updateTreasury(-1)\n          this.endTurn()\n        } else {\n          Swal.fire('Not enough coins in Treasury!')\n          console.error('Not enough coins in Treasury')\n        }\n        break\n      case 'Foreign Aid':\n        if (this.props.treasury >= 2) {\n          this.alertPlayers(action, undefined, 'Duke')\n\n        } else {\n          Swal.fire('Not enough coins in Treasury!')\n          console.error('Not enough coins in Treasury')\n        }\n        break\n      case 'Tax':\n        if (this.props.treasury >= 3) {\n          this.alertPlayers(action, 'Duke', undefined)\n\n        } else {\n          Swal.fire('Not enough coins in Treasury!')\n          console.error('Not enough coins in Treasury')\n        }\n        break\n      case 'Coup':\n        if (this.props.player.coins >= 7) {\n          this.targetPlayer(action)\n        } else {\n          Swal.fire(`You need 7 coins to Coup.`)\n        }\n        break\n      case 'Assassinate':\n        if (this.props.player.coins >= 3) {\n          this.targetPlayer(action, 'Assassin', 'Contessa')\n        } else {\n          Swal.fire(`You need 3 coins to Assassinate.`)\n        }\n        break\n      case 'Exchange':\n        this.alertPlayers(action, 'Ambassador', undefined)\n        break\n      case 'Steal':\n        this.targetPlayer(action, 'Captain', 'Ambassador', 'Captain')\n        break\n      default:\n        console.error('Invalid player action')\n    }\n  }\n\n  updatePlayer = () => {\n    // console.log(this.props.player.coins + 'coins')\n    this.props.pubnub.publish({\n      message: {\n        type: 'updatePlayer',\n        player: this.props.player\n      },\n      channel: this.props.gameChannel\n    })\n  }\n\n  updateTreasury = (amt) => {\n    // console.log(this.props.treasury)\n    this.props.pubnub.publish({\n      message: {\n        type: 'updateTreasury',\n        treasury: this.props.treasury + amt\n      },\n      channel: this.props.gameChannel\n    })\n  }\n\n  updateCoins = async(amt) => {\n    await this.props.updateCoins(amt)\n    this.updatePlayer()\n  }\n\n  targetPlayer = (action, associatedCard = undefined, ...counterCards) => {\n    console.log(`Using ${action}. Choose a player to target.`)\n    // swal with buttons for now, can later convert to onClick opponent div w/ hover effect\n    Swal.fire({\n      title: `Choose an opponent to use ${action} on.`,\n      showConfirmButton: false,\n      showCancelButton: true,\n      allowOutsideClick: false,\n      timer: 10000,\n      timerProgressBar: true,\n      onBeforeOpen: () => {\n        // console.log(this.props.players)\n        // const actionsDiv = document.querySelector('.swal2-actions')\n        const actionsDiv = Swal.getActions()\n\n        const opponents = this.props.players.filter(player => player.id !== this.props.player.id && !player.gameOver)\n\n        opponents.forEach(opponent => {\n          const btn = document.createElement('button')\n          btn.innerText = opponent.username\n          btn.className = \"swal2-confirm swal2-styled\"\n          // let id = opponent.id\n          btn.addEventListener('click', () => {\n            console.log(opponent.id)\n            Swal.close()\n\n            this.props.pubnub.publish({\n              message: {\n                type: 'target',\n                action: action,\n                associatedCard: associatedCard,\n                counterCards: counterCards,\n                targetPlayerId: opponent.id,\n              },\n              channel: this.props.gameChannel\n            })\n          })\n          actionsDiv.append(btn)\n        })\n      }\n    })\n\n\n\n  }\n\n  // alertPlayers = (action, counterAction, associatedCard, counterCard) => {\n  alertPlayers = (action, associatedCard, counterCard) => {\n    this.props.pubnub.publish({\n      message: {\n        type: 'alert',\n        // fromPlayer: this.props.player,\n        action: action,\n        // counterAction: counterAction,\n        // message: msg,\n        associatedCard: associatedCard,\n        counterCard: counterCard,\n      },\n      channel: this.props.gameChannel\n    })\n  }\n\n  endTurn = () => {\n    this.props.pubnub.publish({\n      message: { type: 'endTurn' },\n      channel: this.props.gameChannel\n    })\n  }\n\n  render() {\n    const player = this.props.player\n    const actions = []\n    for (const action in this.props.player.actions) {\n      actions.push(this.props.player.actions[action])\n    }\n    console.log(actions)\n    return (\n      <div className='player-container'>\n        <div className='player-name-hand-coin-container'>\n          <div className='player-name-coins-container'>\n            <p className='player-name'>{player.username}</p>\n            <p className='coins'>Coins: {player.coins}</p>\n          </div>\n          <div className='player-hand-container'>\n            <p>Hand</p>\n            <div className='player-hand'>\n              {player.hand.map(card => <Card key={card.id} card={card} />)}\n            </div>\n          </div>\n        </div>\n        {/* <div className='actions'>Actions: \n          {actions.map(action => \n            <div className='action' key={action.action}>\n              <button onClick={e => this.handleClickAction(e.target.value)} id={action.action} value={action.action} disabled={this.isYourTurn() ? '' : 'disabled'}>{action.action}</button>\n              <p>{action.effect}</p>\n              <p>{action.counteraction}</p>\n              <p>{action.character}</p>\n            </div>\n          )}\n        </div> */}\n        <table className='actions'>\n          <tr>\n            <th>header 1</th>\n            <th>header 2</th>\n          </tr>\n          <tr>\n            <td>action 1</td>\n            <td>action 1 description</td>\n          </tr>\n          <tr>\n            <td>action 2</td>\n            <td>action 2 description</td>\n          </tr>\n          <tr>\n            <td>action 3</td>\n            <td>action 3 description</td>\n          </tr>\n          <tr>\n            <td>action 4</td>\n            <td>action 4 description</td>\n          </tr>\n          <tr>\n            <td>action 5</td>\n            <td>action 5 description</td>\n          </tr>\n        </table>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    pubnub: state.connectionReducer.pubnub,\n    gameChannel: state.connectionReducer.gameChannel,\n    isHost: state.connectionReducer.isHost,\n    players: state.gameReducer.players,\n    deck: state.gameReducer.deck,\n    treasury: state.gameReducer.treasury,\n    player: state.playerReducer,\n    activePlayer: state.gameReducer.activePlayer,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    endTurn: (() => dispatch({type: 'endTurn'})),\n    updateCoins: ((amt) => dispatch({type: 'updateCoins', amt: amt})),\n    changeTreasury: ((amt) => dispatch({type: 'changeTreasury', amt: amt})),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Player)"]},"metadata":{},"sourceType":"module"}