{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudentaccount/Development/Module 5/mod_5_final_project/frontend/src/components/Game.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nclass Game extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.shuffleDeck = () => {\n      let shuffledDeck = [...this.props.deck];\n      debugger;\n\n      for (let i = shuffledDeck.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1))[(shuffledDeck[i], shuffledDeck[j])] = [shuffledDeck[j], shuffledDeck[i]];\n      }\n\n      this.props.shuffleDeck(shuffledDeck);\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/deck').then(r => r.json()).then(deck => {\n      this.props.init(deck.cards);\n    });\n    console.log(`Current players: ${this.props.players.map(player => player)}`);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, \"Deck: \", this.props.deck.map(card => card.name + \", \")), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.shuffleDeck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, \"Shuffle Deck\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    pubnub: state.connectionReducer.pubnub,\n    players: state.connectionReducer.players,\n    deck: state.gameReducer.deck\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    init: cards => dispatch({\n      type: 'initializeDeck',\n      cards: cards\n    }),\n    shuffleDeck: shuffledDeck => dispatch({\n      type: 'shuffleDeck',\n      shuffledDeck: shuffledDeck\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","map":{"version":3,"sources":["/Users/flatironstudentaccount/Development/Module 5/mod_5_final_project/frontend/src/components/Game.js"],"names":["React","connect","Game","Component","shuffleDeck","shuffledDeck","props","deck","i","length","j","Math","floor","random","componentDidMount","fetch","then","r","json","init","cards","console","log","players","map","player","render","card","name","mapStateToProps","state","pubnub","connectionReducer","gameReducer","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAWjCC,WAXiC,GAWnB,MAAM;AAClB,UAAIC,YAAY,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWC,IAAf,CAAnB;AACA;;AACA,WAAK,IAAIC,CAAC,GAAGH,YAAY,CAACI,MAAb,GAAsB,CAAnC,EAAsCD,CAAC,GAAG,CAA1C,EAA6CA,CAAC,EAA9C,EAAkD;AAChD,YAAIE,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,GACPH,YAAY,CAACG,CAAD,CAAZ,EAAiBH,YAAY,CAACK,CAAD,CADtB,KAC6B,CAACL,YAAY,CAACK,CAAD,CAAb,EAAkBL,YAAY,CAACG,CAAD,CAA9B,CADrC;AAED;;AACD,WAAKF,KAAL,CAAWF,WAAX,CAAuBC,YAAvB;AACD,KAnBgC;AAAA;;AACjCS,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAAC,4BAAD,CAAL,CACCC,IADD,CACMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADX,EAECF,IAFD,CAEMT,IAAI,IAAI;AACZ,WAAKD,KAAL,CAAWa,IAAX,CAAgBZ,IAAI,CAACa,KAArB;AACD,KAJD;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAa,oBAAmB,KAAKhB,KAAL,CAAWiB,OAAX,CAAmBC,GAAnB,CAAuBC,MAAM,IAAIA,MAAjC,CAAyC,EAAzE;AACD;;AAYDC,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAU,KAAKpB,KAAL,CAAWC,IAAX,CAAgBiB,GAAhB,CAAoBG,IAAI,IAAIA,IAAI,CAACC,IAAL,GAAY,IAAxC,CAAV,CADF,eAEE;AAAQ,MAAA,OAAO,EAAE,KAAKxB,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,CADF;AAMD;;AA7BgC;;AAgCnC,MAAMyB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,MAAM,EAAED,KAAK,CAACE,iBAAN,CAAwBD,MAD3B;AAELR,IAAAA,OAAO,EAAEO,KAAK,CAACE,iBAAN,CAAwBT,OAF5B;AAGLhB,IAAAA,IAAI,EAAEuB,KAAK,CAACG,WAAN,CAAkB1B;AAHnB,GAAP;AAKD,CAND;;AAQA,MAAM2B,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLhB,IAAAA,IAAI,EAAIC,KAAD,IAAWe,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE,gBAAP;AAAyBhB,MAAAA,KAAK,EAAEA;AAAhC,KAAD,CADrB;AAELhB,IAAAA,WAAW,EAAIC,YAAD,IAAkB8B,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE,aAAP;AAAsB/B,MAAAA,YAAY,EAAEA;AAApC,KAAD;AAFnC,GAAP;AAID,CALD;;AAOA,eAAeJ,OAAO,CAAC4B,eAAD,EAAkBK,kBAAlB,CAAP,CAA6ChC,IAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\n\nclass Game extends React.Component {\n  componentDidMount(){\n    fetch('http://localhost:3000/deck')\n    .then(r => r.json())\n    .then(deck => {\n      this.props.init(deck.cards)\n    })\n\n    console.log(`Current players: ${this.props.players.map(player => player)}`)\n  }\n\n  shuffleDeck = () => {\n    let shuffledDeck = [...this.props.deck]\n    debugger\n    for (let i = shuffledDeck.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1))\n      [shuffledDeck[i], shuffledDeck[j]] = [shuffledDeck[j], shuffledDeck[i]]\n    }\n    this.props.shuffleDeck(shuffledDeck)\n  }\n\n  render() {\n\n    return (\n      <div>\n        <p>Deck: {this.props.deck.map(card => card.name + \", \")}</p>\n        <button onClick={this.shuffleDeck}>Shuffle Deck</button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    pubnub: state.connectionReducer.pubnub,\n    players: state.connectionReducer.players,\n    deck: state.gameReducer.deck\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    init: ((cards) => dispatch({type: 'initializeDeck', cards: cards})),\n    shuffleDeck: ((shuffledDeck) => dispatch({type: 'shuffleDeck', shuffledDeck: shuffledDeck}))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game)\n"]},"metadata":{},"sourceType":"module"}