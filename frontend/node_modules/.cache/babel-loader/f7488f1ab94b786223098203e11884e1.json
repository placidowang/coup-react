{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudentaccount/Development/Module 5/mod_5_final_project/frontend/src/containers/Player.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './Player.css';\nimport Card from '../components/Card.js';\n\nclass Player extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.takeAction = action => {\n      console.log(action);\n    };\n  }\n\n  componentDidMount() {\n    this.props.pubnub.getMessage(this.props.gameChannel, msg => {\n      switch (msg.message.type) {\n        case 'nextTurn':\n          this.props.nextTurn();\n          console.log(this.props.whosTurnIsIt);\n          this.props.setActivePlayer();\n          break;\n\n        case 'log':\n          console.log(msg.message.text);\n          break;\n\n        default:\n          console.error('Unknown player message.');\n          console.log(msg);\n      }\n    });\n  }\n\n  componentDidUpdate() {// console.log(this.props.player)\n  }\n\n  // nextTurn = () => {\n  //   this.props.pubnub.publish({\n  //     message: { type: 'nextTurn' },\n  //     channel: this.props.gameChannel\n  //   })\n  // }\n  render() {\n    const player = this.props.player;\n    const actions = [];\n\n    for (const action in this.props.player.actions) {\n      actions.push(this.props.player.actions[action]);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"player-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, player.username), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, \"Current hand: \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, player.hand.map(card => /*#__PURE__*/React.createElement(Card, {\n      key: card.id,\n      card: card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 36\n      }\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"Coins: \", player.coins), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"Actions: \", actions.map(action => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions\",\n      key: action.action,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.takeAction(e.target.value),\n      value: action.action,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, action.action)))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    pubnub: state.connectionReducer.pubnub,\n    gameChannel: state.connectionReducer.gameChannel,\n    isHost: state.connectionReducer.isHost,\n    players: state.connectionReducer.players,\n    deck: state.gameReducer.deck,\n    player: state.playerReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    nextTurn: () => dispatch({\n      type: 'nextTurn'\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);","map":{"version":3,"sources":["/Users/flatironstudentaccount/Development/Module 5/mod_5_final_project/frontend/src/containers/Player.js"],"names":["React","connect","Card","Player","Component","takeAction","action","console","log","componentDidMount","props","pubnub","getMessage","gameChannel","msg","message","type","nextTurn","whosTurnIsIt","setActivePlayer","text","error","componentDidUpdate","render","player","actions","push","username","hand","map","card","id","coins","e","target","value","mapStateToProps","state","connectionReducer","isHost","players","deck","gameReducer","playerReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport './Player.css'\nimport Card from '../components/Card.js'\n\nclass Player extends React.Component {\n  componentDidMount() {\n    this.props.pubnub.getMessage(this.props.gameChannel, (msg) => {\n      switch (msg.message.type) {\n        case 'nextTurn':\n          this.props.nextTurn()\n          console.log(this.props.whosTurnIsIt)\n          this.props.setActivePlayer()\n          break\n        case 'log':\n          console.log(msg.message.text)\n          break\n        default:\n          console.error('Unknown player message.')\n          console.log(msg)\n      }\n    })\n  }\n  componentDidUpdate() {\n    // console.log(this.props.player)\n  }\n\n  takeAction = (action) => {\n    console.log(action)\n  }\n\n  // nextTurn = () => {\n  //   this.props.pubnub.publish({\n  //     message: { type: 'nextTurn' },\n  //     channel: this.props.gameChannel\n  //   })\n  // }\n\n  render() {\n    const player = this.props.player\n    const actions = []\n    for (const action in this.props.player.actions) {\n      actions.push(this.props.player.actions[action])\n    }\n    return (\n      <div className='player-container'>\n        <p className='player-name'>{player.username}</p>\n        {/* <p>Current hand: {player.hand.map(card => card.name).join(', ')}</p> */}\n        <p>Current hand: </p>\n        <div className='hand'>\n          {player.hand.map(card => <Card key={card.id} card={card} />)}\n        </div>\n        <p>Coins: {player.coins}</p>\n        <div className='actions'>Actions: {actions.map(action => \n          <div className='actions' key={action.action}>\n            <button onClick={e => this.takeAction(e.target.value)} value={action.action}>{action.action}</button>\n          </div>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    pubnub: state.connectionReducer.pubnub,\n    gameChannel: state.connectionReducer.gameChannel,\n    isHost: state.connectionReducer.isHost,\n    players: state.connectionReducer.players,\n    deck: state.gameReducer.deck,\n    player: state.playerReducer,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    nextTurn: (() => dispatch({type: 'nextTurn'})),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Player)"]},"metadata":{},"sourceType":"module"}