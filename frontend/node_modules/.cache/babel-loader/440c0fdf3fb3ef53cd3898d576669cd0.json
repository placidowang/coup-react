{"ast":null,"code":"import _regeneratorRuntime from\"/Users/flatironstudentaccount/Development/Module 5/coup-react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/flatironstudentaccount/Development/Module 5/coup-react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/flatironstudentaccount/Development/Module 5/coup-react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/flatironstudentaccount/Development/Module 5/coup-react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/flatironstudentaccount/Development/Module 5/coup-react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/flatironstudentaccount/Development/Module 5/coup-react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import'./Player.css';import Card from'../components/Card.js';import Swal from'sweetalert2';var Player=/*#__PURE__*/function(_React$Component){_inherits(Player,_React$Component);var _super=_createSuper(Player);function Player(){var _this;_classCallCheck(this,Player);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.isYourTurn=function(){return _this.props.activePlayer.id===_this.props.player.id;};_this.handleClickAction=function(action){console.log('Attempting to use '+action);switch(action){case'Income':if(_this.props.treasury>=1){_this.updateCoins(1);// await this.props.changeTreasury(-amt)\n_this.updateTreasury(-1);_this.endTurn();}else{Swal.fire('Not enough coins in Treasury!');console.error('Not enough coins in Treasury');}break;case'Foreign Aid':if(_this.props.treasury>=2){_this.alertPlayers(action,undefined,'Duke');}else{Swal.fire('Not enough coins in Treasury!');console.error('Not enough coins in Treasury');}break;case'Tax':if(_this.props.treasury>=3){_this.alertPlayers(action,'Duke',undefined);}else{Swal.fire('Not enough coins in Treasury!');console.error('Not enough coins in Treasury');}break;case'Coup':if(_this.props.player.coins>=7){_this.targetPlayer(action);}else{Swal.fire(\"You need 7 coins to Coup.\");}break;case'Assassinate':if(_this.props.player.coins>=3){_this.targetPlayer(action,'Assassin','Contessa');}else{Swal.fire(\"You need 3 coins to Assassinate.\");}break;case'Exchange':_this.alertPlayers(action,'Ambassador',undefined);break;case'Steal':_this.targetPlayer(action,'Captain','Ambassador','Captain');break;default:console.error('Invalid player action');}};_this.updatePlayer=function(){// console.log(this.props.player.coins + 'coins')\n_this.props.pubnub.publish({message:{type:'updatePlayer',player:_this.props.player},channel:_this.props.gameChannel});};_this.updateTreasury=function(amt){// console.log(this.props.treasury)\n_this.props.pubnub.publish({message:{type:'updateTreasury',treasury:_this.props.treasury+amt},channel:_this.props.gameChannel});};_this.updateCoins=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(amt){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _this.props.updateCoins(amt);case 2:_this.updatePlayer();case 3:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.targetPlayer=function(action){var associatedCard=arguments.length>1&&arguments[1]!==undefined?arguments[1]:undefined;for(var _len2=arguments.length,counterCards=new Array(_len2>2?_len2-2:0),_key2=2;_key2<_len2;_key2++){counterCards[_key2-2]=arguments[_key2];}console.log(\"Using \".concat(action,\". Choose a player to target.\"));// swal with buttons for now, can later convert to onClick opponent div w/ hover effect\nSwal.fire({title:\"Choose an opponent to use \".concat(action,\" on.\"),showConfirmButton:false,showCancelButton:true,allowOutsideClick:false,timer:10000,timerProgressBar:true,onBeforeOpen:function onBeforeOpen(){// console.log(this.props.players)\n// const actionsDiv = document.querySelector('.swal2-actions')\nvar actionsDiv=Swal.getActions();var opponents=_this.props.players.filter(function(player){return player.id!==_this.props.player.id&&!player.gameOver;});opponents.forEach(function(opponent){var btn=document.createElement('button');btn.innerText=opponent.username;btn.className=\"swal2-confirm swal2-styled\";// let id = opponent.id\nbtn.addEventListener('click',function(){console.log(opponent.id);Swal.close();_this.props.pubnub.publish({message:{type:'target',action:action,associatedCard:associatedCard,counterCards:counterCards,targetPlayerId:opponent.id},channel:_this.props.gameChannel});});actionsDiv.append(btn);});}});};_this.alertPlayers=function(action,associatedCard,counterCard){_this.props.pubnub.publish({message:{type:'alert',// fromPlayer: this.props.player,\naction:action,// counterAction: counterAction,\n// message: msg,\nassociatedCard:associatedCard,counterCard:counterCard},channel:_this.props.gameChannel});};_this.endTurn=function(){_this.props.pubnub.publish({message:{type:'endTurn'},channel:_this.props.gameChannel});};return _this;}_createClass(Player,[{key:\"componentDidMount\",value:function componentDidMount(){}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){// console.log(this.props.player)\n}},{key:\"render\",value:function render(){var _this2=this;var player=this.props.player;var actions=[];for(var action in this.props.player.actions){actions.push(this.props.player.actions[action]);}// console.log(actions)\nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"player-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"player-name-hand-coin-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"player-name-coins-container\"},/*#__PURE__*/React.createElement(\"p\",{className:\"player-name\"},player.username),/*#__PURE__*/React.createElement(\"p\",{className:\"coins\"},\"Coins: \",player.coins)),/*#__PURE__*/React.createElement(\"div\",{className:\"player-hand-container\"},/*#__PURE__*/React.createElement(\"p\",null,\"Hand\"),/*#__PURE__*/React.createElement(\"div\",{className:\"player-hand\"},player.hand.map(function(card){return/*#__PURE__*/React.createElement(Card,{key:card.id,card:card});})))),/*#__PURE__*/React.createElement(\"table\",{id:\"actions\"},/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Action\"),/*#__PURE__*/React.createElement(\"th\",null,\"Character\"),/*#__PURE__*/React.createElement(\"th\",{className:\"effect\"},\"Effect\"),/*#__PURE__*/React.createElement(\"th\",null,\"Counteraction\")),actions.map(function(action){return/*#__PURE__*/React.createElement(\"tr\",{className:\"action\",key:action.action},/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(e){return _this2.handleClickAction(e.target.value);},id:action.action,value:action.action,disabled:_this2.isYourTurn()?'':'disabled'},action.action)),/*#__PURE__*/React.createElement(\"td\",{className:action.character},action.character?action.character:'X'),/*#__PURE__*/React.createElement(\"td\",null,action.effect?action.effect:'X'),/*#__PURE__*/React.createElement(\"td\",null,action.counteraction?action.counteraction:'X'));}))));}}]);return Player;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{pubnub:state.connectionReducer.pubnub,gameChannel:state.connectionReducer.gameChannel,isHost:state.connectionReducer.isHost,players:state.gameReducer.players,deck:state.gameReducer.deck,treasury:state.gameReducer.treasury,player:state.playerReducer,activePlayer:state.gameReducer.activePlayer};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{endTurn:function endTurn(){return dispatch({type:'endTurn'});},updateCoins:function updateCoins(amt){return dispatch({type:'updateCoins',amt:amt});},changeTreasury:function changeTreasury(amt){return dispatch({type:'changeTreasury',amt:amt});}};};export default connect(mapStateToProps,mapDispatchToProps)(Player);","map":{"version":3,"sources":["/Users/flatironstudentaccount/Development/Module 5/coup-react/frontend/src/containers/Player.js"],"names":["React","connect","Card","Swal","Player","isYourTurn","props","activePlayer","id","player","handleClickAction","action","console","log","treasury","updateCoins","updateTreasury","endTurn","fire","error","alertPlayers","undefined","coins","targetPlayer","updatePlayer","pubnub","publish","message","type","channel","gameChannel","amt","associatedCard","counterCards","title","showConfirmButton","showCancelButton","allowOutsideClick","timer","timerProgressBar","onBeforeOpen","actionsDiv","getActions","opponents","players","filter","gameOver","forEach","opponent","btn","document","createElement","innerText","username","className","addEventListener","close","targetPlayerId","append","counterCard","actions","push","hand","map","card","e","target","value","character","effect","counteraction","Component","mapStateToProps","state","connectionReducer","isHost","gameReducer","deck","playerReducer","mapDispatchToProps","dispatch","changeTreasury"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport './Player.css'\nimport Card from '../components/Card.js'\nimport Swal from 'sweetalert2'\n\nclass Player extends React.Component {\n  componentDidMount() {\n\n  }\n  \n  componentDidUpdate() {\n    // console.log(this.props.player)\n  }\n\n  isYourTurn = () => {\n    return (this.props.activePlayer.id === this.props.player.id)\n  }\n\n  // don't need to account for turn anymore; actions are disabled if it's not your turn\n  handleClickAction = (action) => {\n    console.log('Attempting to use ' + action)\n    switch (action) {\n      case 'Income':\n        if (this.props.treasury >= 1) {\n          this.updateCoins(1)\n          // await this.props.changeTreasury(-amt)\n          this.updateTreasury(-1)\n          this.endTurn()\n        } else {\n          Swal.fire('Not enough coins in Treasury!')\n          console.error('Not enough coins in Treasury')\n        }\n        break\n      case 'Foreign Aid':\n        if (this.props.treasury >= 2) {\n          this.alertPlayers(action, undefined, 'Duke')\n\n        } else {\n          Swal.fire('Not enough coins in Treasury!')\n          console.error('Not enough coins in Treasury')\n        }\n        break\n      case 'Tax':\n        if (this.props.treasury >= 3) {\n          this.alertPlayers(action, 'Duke', undefined)\n\n        } else {\n          Swal.fire('Not enough coins in Treasury!')\n          console.error('Not enough coins in Treasury')\n        }\n        break\n      case 'Coup':\n        if (this.props.player.coins >= 7) {\n          this.targetPlayer(action)\n        } else {\n          Swal.fire(`You need 7 coins to Coup.`)\n        }\n        break\n      case 'Assassinate':\n        if (this.props.player.coins >= 3) {\n          this.targetPlayer(action, 'Assassin', 'Contessa')\n        } else {\n          Swal.fire(`You need 3 coins to Assassinate.`)\n        }\n        break\n      case 'Exchange':\n        this.alertPlayers(action, 'Ambassador', undefined)\n        break\n      case 'Steal':\n        this.targetPlayer(action, 'Captain', 'Ambassador', 'Captain')\n        break\n      default:\n        console.error('Invalid player action')\n    }\n  }\n\n  updatePlayer = () => {\n    // console.log(this.props.player.coins + 'coins')\n    this.props.pubnub.publish({\n      message: {\n        type: 'updatePlayer',\n        player: this.props.player\n      },\n      channel: this.props.gameChannel\n    })\n  }\n\n  updateTreasury = (amt) => {\n    // console.log(this.props.treasury)\n    this.props.pubnub.publish({\n      message: {\n        type: 'updateTreasury',\n        treasury: this.props.treasury + amt\n      },\n      channel: this.props.gameChannel\n    })\n  }\n\n  updateCoins = async(amt) => {\n    await this.props.updateCoins(amt)\n    this.updatePlayer()\n  }\n\n  targetPlayer = (action, associatedCard = undefined, ...counterCards) => {\n    console.log(`Using ${action}. Choose a player to target.`)\n    // swal with buttons for now, can later convert to onClick opponent div w/ hover effect\n    Swal.fire({\n      title: `Choose an opponent to use ${action} on.`,\n      showConfirmButton: false,\n      showCancelButton: true,\n      allowOutsideClick: false,\n      timer: 10000,\n      timerProgressBar: true,\n      onBeforeOpen: () => {\n        // console.log(this.props.players)\n        // const actionsDiv = document.querySelector('.swal2-actions')\n        const actionsDiv = Swal.getActions()\n\n        const opponents = this.props.players.filter(player => player.id !== this.props.player.id && !player.gameOver)\n\n        opponents.forEach(opponent => {\n          const btn = document.createElement('button')\n          btn.innerText = opponent.username\n          btn.className = \"swal2-confirm swal2-styled\"\n          // let id = opponent.id\n          btn.addEventListener('click', () => {\n            console.log(opponent.id)\n            Swal.close()\n\n            this.props.pubnub.publish({\n              message: {\n                type: 'target',\n                action: action,\n                associatedCard: associatedCard,\n                counterCards: counterCards,\n                targetPlayerId: opponent.id,\n              },\n              channel: this.props.gameChannel\n            })\n          })\n          actionsDiv.append(btn)\n        })\n      }\n    })\n\n\n\n  }\n\n  // alertPlayers = (action, counterAction, associatedCard, counterCard) => {\n  alertPlayers = (action, associatedCard, counterCard) => {\n    this.props.pubnub.publish({\n      message: {\n        type: 'alert',\n        // fromPlayer: this.props.player,\n        action: action,\n        // counterAction: counterAction,\n        // message: msg,\n        associatedCard: associatedCard,\n        counterCard: counterCard,\n      },\n      channel: this.props.gameChannel\n    })\n  }\n\n  endTurn = () => {\n    this.props.pubnub.publish({\n      message: { type: 'endTurn' },\n      channel: this.props.gameChannel\n    })\n  }\n\n  render() {\n    const player = this.props.player\n    const actions = []\n    for (const action in this.props.player.actions) {\n      actions.push(this.props.player.actions[action])\n    }\n    // console.log(actions)\n    return (\n      <div className='player-container'>\n        <div className='player-name-hand-coin-container'>\n          <div className='player-name-coins-container'>\n            <p className='player-name'>{player.username}</p>\n            <p className='coins'>Coins: {player.coins}</p>\n          </div>\n          <div className='player-hand-container'>\n            <p>Hand</p>\n            <div className='player-hand'>\n              {player.hand.map(card => <Card key={card.id} card={card} />)}\n            </div>\n          </div>\n        </div>\n        {/* <div className='actions'>Actions: \n          {actions.map(action => \n            <div className='action' key={action.action}>\n              <button onClick={e => this.handleClickAction(e.target.value)} id={action.action} value={action.action} disabled={this.isYourTurn() ? '' : 'disabled'}>{action.action}</button>\n              <p>{action.effect}</p>\n              <p>{action.counteraction}</p>\n              <p>{action.character}</p>\n            </div>\n          )}\n        </div> */}\n        <table id='actions'>\n          <tbody>\n            <tr>\n              <th>Action</th>\n              <th>Character</th>\n              <th className='effect'>Effect</th>\n              <th>Counteraction</th>\n            </tr>\n            {actions.map(action => \n              <tr className='action' key={action.action}>\n                <td>\n                  <button onClick={e => this.handleClickAction(e.target.value)} id={action.action} value={action.action} disabled={this.isYourTurn() ? '' : 'disabled'}>{action.action}</button>\n                </td>\n                <td className={action.character}>{action.character ? action.character : 'X'}</td>\n                <td>{action.effect ? action.effect : 'X'}</td>\n                <td>{action.counteraction ? action.counteraction : 'X'}</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    pubnub: state.connectionReducer.pubnub,\n    gameChannel: state.connectionReducer.gameChannel,\n    isHost: state.connectionReducer.isHost,\n    players: state.gameReducer.players,\n    deck: state.gameReducer.deck,\n    treasury: state.gameReducer.treasury,\n    player: state.playerReducer,\n    activePlayer: state.gameReducer.activePlayer,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    endTurn: (() => dispatch({type: 'endTurn'})),\n    updateCoins: ((amt) => dispatch({type: 'updateCoins', amt: amt})),\n    changeTreasury: ((amt) => dispatch({type: 'changeTreasury', amt: amt})),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Player)"]},"metadata":{},"sourceType":"module"}