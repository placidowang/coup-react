{"ast":null,"code":"import _objectSpread from\"/Users/flatironstudentaccount/Development/Module 5/coup-react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/flatironstudentaccount/Development/Module 5/coup-react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/flatironstudentaccount/Development/Module 5/coup-react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _createForOfIteratorHelper from\"/Users/flatironstudentaccount/Development/Module 5/coup-react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _toConsumableArray from\"/Users/flatironstudentaccount/Development/Module 5/coup-react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/flatironstudentaccount/Development/Module 5/coup-react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/flatironstudentaccount/Development/Module 5/coup-react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/flatironstudentaccount/Development/Module 5/coup-react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/flatironstudentaccount/Development/Module 5/coup-react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import Swal from'sweetalert2';import{connect}from'react-redux';import Player from'../containers/Player.js';import OpponentsContainer from'../containers/OpponentsContainer.js';import Card from'./Card.js';import'./Game.css';var globalSwalTimer=10000;var Game=/*#__PURE__*/function(_React$Component){_inherits(Game,_React$Component);var _super=_createSuper(Game);function Game(){var _this;_classCallCheck(this,Game);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.initializeGame=function(deckData){// initializeGame = (deckData) => {\n// let deck = deckData.cards.map(card => ({...card, isRevealed: false}))\nvar shuffledDeck=_this.shuffleDeck(_this.props.deck);_this.distributeCards(shuffledDeck);};_this.shuffleDeck=function(){var deck=arguments.length>0&&arguments[0]!==undefined?arguments[0]:_toConsumableArray(_this.props.deck);var getNewCard=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;for(var i=deck.length-1;i>0;i--){var j=Math.floor(Math.random()*(i+1));var _ref=[deck[j],deck[i]];deck[i]=_ref[0];deck[j]=_ref[1];}if(getNewCard){var newCard=deck.shift();_this.updateDeck(deck);return newCard;}else{_this.updateDeck(deck);return deck;}};_this.updateDeck=function(deck){_this.props.pubnub.publish({message:{type:'updateDeck',updatedDeck:deck},channel:_this.props.gameChannel});};_this.distributeCards=function(deck){var _iterator=_createForOfIteratorHelper(_this.props.players),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var player=_step.value;var card1=deck.shift();var card2=deck.shift();_this.props.pubnub.publish({message:{type:'updateHand',playerId:player.id,cards:[card1,card2]},channel:_this.props.gameChannel});}}catch(err){_iterator.e(err);}finally{_iterator.f();}_this.updateDeck(deck);};_this.isYourTurn=function(){return _this.props.activePlayer.id===_this.props.player.id;};_this.aOrAn=function(word){return /[aeiouAEIOU]/.test(word.charAt(0))?\"an\":\"a\";};_this.updatePlayer=function(){// console.log(this.props.player.coins + 'coins')\n_this.props.pubnub.publish({message:{type:'updatePlayer',player:_this.props.player},channel:_this.props.gameChannel});};_this.updateTreasury=function(amt){// console.log(this.props.treasury)\n_this.props.pubnub.publish({message:{type:'updateTreasury',treasury:_this.props.treasury+amt},channel:_this.props.gameChannel});};_this.updateCoins=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(amt){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _this.props.updateCoins(amt);case 2:_this.updatePlayer();case 3:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}();_this.useAction=function(action){var targetPlayerId=arguments.length>1&&arguments[1]!==undefined?arguments[1]:NaN;console.log('Using '+action);console.log('Target player ID: '+targetPlayerId);switch(action){// income is handled in Player.js\ncase'Foreign Aid':_this.updateCoins(2);_this.updateTreasury(-2);_this.endTurn();break;case'Tax':_this.updateCoins(3);_this.updateTreasury(-3);_this.endTurn();break;case'Steal':var amt=2;var remainder=_this.props.players.find(function(player){return player.id===targetPlayerId;}).coins-2;if(remainder<0){amt+=remainder;}_this.updateCoins(amt);// eslint-disable-next-line\ncase'Coup':case'Assassinate':_this.props.pubnub.publish({message:{type:'useTargetedAction',action:action,targetPlayerId:targetPlayerId},channel:_this.props.gameChannel});break;case'Exchange':var numberOfCardsToKeep=_this.props.player.hand.filter(function(card){return card.isRevealed===false;}).length;var nextCard=_this.props.deck.shift();var nextCard2=_this.props.deck.shift();console.log(nextCard,nextCard2);Swal.fire({title:\"Choose \".concat(numberOfCardsToKeep,\" card(s) to keep.\")});break;default:console.error('Invalid action.');}};_this.loseCard=function(){/* if player only has one unrevealed card, player loses the game */if(_this.props.player.hand.filter(function(card){return card.isRevealed===true;}).length===1){_this.gameOver();return;}Swal.fire({title:\"Pick a card to lose.\",focusConfirm:false,showCancelButton:true,cancelButtonColor:'#3085d6',confirmButtonText:\"Lose \".concat(_this.props.player.hand[0].name),cancelButtonText:\"Lose \".concat(_this.props.player.hand[1].name),allowOutsideClick:false,allowEscapeKey:false,timer:globalSwalTimer,timerProgressBar:true,html:\"<span class='swal2-text'>Losing a random card in <b></b></span>\",onBeforeOpen:function onBeforeOpen(){setInterval(function(){var content=Swal.getContent();if(content){var b=content.querySelector('b');if(b&&Swal.getTimerLeft()){b.textContent=Math.ceil(Swal.getTimerLeft()/1000);}}},100);}// footer: 'fuck',\n}).then(function(r){// console.log(r)\nvar i;if(r.value){i=0;}else if(r.dismiss==='cancel'){i=1;}else{i=Math.round(Math.random());}Swal.fire({title:\"Lost \".concat(_this.props.player.hand[i].name,\"!\"),timer:1500,showConfirmButton:false}).then(function(r){_this.props.revealCard(i);_this.updatePlayer();_this.endTurn();});});};_this.getNewCard=function(challengedCard,fn){var oldCard=_this.props.player.hand.find(function(card){return card.name===challengedCard;});_this.props.deck.push(oldCard);var newCard=_this.shuffleDeck(_this.props.deck,true);console.log(\"You shuffled in your \".concat(oldCard.name,\" and got \").concat(_this.aOrAn(newCard.name),\" \").concat(newCard.name,\"!\"));Swal.fire({title:\"You shuffled in your \".concat(oldCard.name,\" and got \").concat(_this.aOrAn(newCard.name),\" \").concat(newCard.name,\"!\"),timer:2000,showConfirmButton:false}).then(fn);var newHand=_toConsumableArray(_this.props.player.hand);newHand[newHand.findIndex(function(card){return card.id===oldCard.id;})]=newCard;_this.props.updateHand(newHand);_this.updatePlayer();};_this.endTurn=function(){_this.props.pubnub.publish({message:{type:'endTurn'},channel:_this.props.gameChannel});};_this.gameOver=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var newHand,i;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:Swal.close();Swal.fire({title:'Game over, man!',showConfirmButton:false,allowOutsideClick:false});// reveal remaining card\nnewHand=_toConsumableArray(_this.props.player.hand);i=_this.props.player.hand[0].isRevealed?1:0;newHand[i]=_objectSpread({},newHand[i],{isRevealed:true});_this.props.updateHand(newHand);// skip player in turn order; cannot just remove player from players list or their cards will also be removed\n// await next line? problem with determining next turn when a player is defeated\n_context2.next=8;return _this.props.gameOver();case 8:_context2.next=10;return _this.updatePlayer();case 10:_this.endTurn();case 11:case\"end\":return _context2.stop();}}},_callee2);}));_this.testMsg=function(msg){_this.props.pubnub.publish({message:{type:'log',text:msg},channel:_this.props.gameChannel});};_this.hereNow=function(){_this.props.pubnub.hereNow({channels:[_this.props.gameChannel]}).then(console.log);};_this.logPlayers=function(){console.log(_this.props.players);};return _this;}_createClass(Game,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;if(this.props.isHost){// fetch('http://localhost:3000/deck')\n// .then(r => r.json())\n// .then(deckData => {\n//   this.initializeGame(deckData)\n// })\nthis.initializeGame();}var targetPlayer;// if (this.props.gameChannel) {\nthis.props.pubnub.getMessage(this.props.gameChannel,/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(msg){var currentActivePlayerId,counterCard,endTurn,title,challengedCard,_title,amt,remainder;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.t0=msg.message.type;_context3.next=_context3.t0==='updateDeck'?3:_context3.t0==='updatePlayer'?5:_context3.t0==='changeTreasury'?7:_context3.t0==='updateTreasury'?9:_context3.t0==='updateHand'?11:_context3.t0==='endTurn'?14:_context3.t0==='target'?20:_context3.t0==='alert'?23:_context3.t0==='counter'?25:_context3.t0==='challenge'?27:_context3.t0==='challengedPlayerWon'?29:_context3.t0==='challengedPlayerLost'?31:_context3.t0==='useTargetedAction'?33:_context3.t0==='log'?51:53;break;case 3:_this2.props.updateDeck(msg.message.updatedDeck);return _context3.abrupt(\"break\",55);case 5:_this2.props.updatePlayer(msg.message.player);return _context3.abrupt(\"break\",55);case 7:_this2.props.changeTreasury(msg.message.amt);return _context3.abrupt(\"break\",55);case 9:_this2.props.updateTreasury(msg.message.treasury);return _context3.abrupt(\"break\",55);case 11:_this2.props.setActivePlayer();if(msg.message.playerId===_this2.props.player.id){_this2.props.updateHand(msg.message.cards);// this.updatePlayer(this.props.player)\n_this2.updatePlayer();}return _context3.abrupt(\"break\",55);case 14:// Swal.close()\ncurrentActivePlayerId=_this2.props.activePlayer.id;_this2.props.endTurn();_this2.props.setActivePlayer();if(_this2.props.activePlayer.id===currentActivePlayerId&&_this2.isYourTurn()){Swal.close();Swal.fire({title:'u win gj gg',confirmButtonText:'New Game?',allowOutsideClick:false});}console.log(\"\".concat(_this2.props.players[_this2.props.whosTurnIsIt].username,\"'s turn.\"));return _context3.abrupt(\"break\",55);case 20:targetPlayer=_this2.props.players.find(function(player){return player.id===msg.message.targetPlayerId;});if(msg.message.action==='Coup'){if(_this2.isYourTurn()){_this2.updateCoins(-7);_this2.updateTreasury(7);Swal.fire({title:\"You spent 7 coins and Couped \".concat(targetPlayer.username,\"!\"),showConfirmButton:false,timer:2000});_this2.useAction(msg.message.action,targetPlayer.id);}// if targeted action is not Coup, i.e. Assassinate/Steal\n}else{if(_this2.props.player.id===targetPlayer.id){counterCard=undefined;Swal.fire({title:\"\".concat(_this2.props.activePlayer.username,\" is trying to use \").concat(msg.message.action,\" on you with \").concat(_this2.aOrAn(msg.message.associatedCard),\" \").concat(msg.message.associatedCard,\"!\"),timer:globalSwalTimer,timerProgressBar:true,confirmButtonText:'CHALLENGE',showCancelButton:true,cancelButtonText:\"Let \".concat(_this2.props.activePlayer.username,\" use \").concat(msg.message.action,\". :(\"),html:\"<span class='swal2-text'>Letting \".concat(_this2.props.activePlayer.username,\" use \").concat(msg.message.action,\" in <b></b></span>\"),onBeforeOpen:function onBeforeOpen(){setInterval(function(){var content=Swal.getContent();if(content){var b=content.querySelector('b');if(b&&Swal.getTimerLeft()){b.textContent=Math.ceil(Swal.getTimerLeft()/1000);}}},100);var actionsDiv=Swal.getActions();var _iterator2=_createForOfIteratorHelper(msg.message.counterCards),_step2;try{var _loop=function _loop(){var card=_step2.value;var counterCardBtn=document.createElement('button');counterCardBtn.innerHTML=\"BLOCK with \".concat(card);counterCardBtn.className=\"swal2-confirm swal2-styled\";// eslint-disable-next-line\ncounterCardBtn.addEventListener('click',function(){counterCard=card;Swal.close();});actionsDiv.prepend(counterCardBtn);};for(_iterator2.s();!(_step2=_iterator2.n()).done;){_loop();}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}}).then(function(r){// console.log(r)\nif(counterCard){console.log(\"Attempting to block with a(n) \".concat(counterCard,\".\"));_this2.props.pubnub.publish({message:{type:'counter',action:msg.message.action,counterCard:counterCard,counteredPlayerId:_this2.props.activePlayer.id,counteredPlayerUn:_this2.props.activePlayer.username,counteringPlayerId:_this2.props.player.id,counteringPlayerUn:_this2.props.player.username},channel:_this2.props.gameChannel});}else if(r.value){console.log('Sending challenge to '+msg.message.counteringPlayerUn);_this2.props.pubnub.publish({message:{type:'challenge',challengedPlayerId:_this2.props.activePlayer.id,challengedPlayerUn:_this2.props.activePlayer.username,challengingPlayerId:_this2.props.player.id,challengingPlayerUn:_this2.props.player.username,challengedCard:msg.message.associatedCard,action:msg.message.action},channel:_this2.props.gameChannel});}else if(r.dismiss){console.log('ok :(');}});}else if(_this2.isYourTurn()){endTurn=true;title=\"You Stole 2 coins from \".concat(targetPlayer.username,\"!\");if(msg.message.action==='Assassinate'){_this2.updateCoins(-3);_this2.updateTreasury(3);title=\"You spent 3 coins and Assassinated \".concat(targetPlayer.username,\"!\");endTurn=false;}Swal.fire({title:\"Waiting for \".concat(targetPlayer.username,\".\"),showConfirmButton:false,allowOutsideClick:false,timer:globalSwalTimer,timerProgressBar:true}).then(function(r){if(r.dismiss==='timer'){Swal.fire({title:title,showConfirmButton:false,timer:1500,icon:'success'});_this2.useAction(msg.message.action,targetPlayer.id);endTurn&&_this2.endTurn();}});}}return _context3.abrupt(\"break\",55);case 23:if(!_this2.isYourTurn()&&!_this2.props.player.gameOver){if(!msg.message.associatedCard&&msg.message.counterCard){Swal.fire({title:\"\".concat(_this2.props.activePlayer.username,\" is trying to use \").concat(msg.message.action,\"!\"),timer:globalSwalTimer,timerProgressBar:true,showCancelButton:true,cancelButtonText:\"Let \".concat(_this2.props.activePlayer.username,\" use \").concat(msg.message.action,\"... this time.\"),confirmButtonText:\"BLOCK with \".concat(_this2.aOrAn(msg.message.counterCard),\" \").concat(msg.message.counterCard,\".\"),html:\"<span class='swal2-text'>Letting \".concat(_this2.props.activePlayer.username,\" use \").concat(msg.message.action,\" in <b></b></span>\"),onBeforeOpen:function onBeforeOpen(){setInterval(function(){var content=Swal.getContent();if(content){var b=content.querySelector('b');if(b&&Swal.getTimerLeft()){b.textContent=Math.ceil(Swal.getTimerLeft()/1000);}}},100);}}).then(function(r){if(r.value){_this2.props.pubnub.publish({message:{type:'counter',action:msg.message.action,counterCard:msg.message.counterCard,counteredPlayerId:_this2.props.activePlayer.id,counteredPlayerUn:_this2.props.activePlayer.username,counteringPlayerId:_this2.props.player.id,counteringPlayerUn:_this2.props.player.username},channel:_this2.props.gameChannel});}else{console.log(\"Letting it slide\");}});}else if(msg.message.associatedCard&&!msg.message.counterCard){Swal.fire({title:\"\".concat(_this2.props.activePlayer.username,\" is trying to use \").concat(msg.message.action,\" with \").concat(_this2.aOrAn(msg.message.associatedCard),\" \").concat(msg.message.associatedCard,\"!\"),timer:globalSwalTimer,timerProgressBar:true,showCancelButton:true,cancelButtonText:\"Let \".concat(_this2.props.activePlayer.username,\" use \").concat(msg.message.action,\"... this time.\"),confirmButtonText:\"CHALLENGE\",html:\"<span class='swal2-text'>Letting \".concat(_this2.props.activePlayer.username,\" use \").concat(msg.message.action,\" in <b></b></span>\"),onBeforeOpen:function onBeforeOpen(){setInterval(function(){var content=Swal.getContent();if(content){var b=content.querySelector('b');if(b&&Swal.getTimerLeft()){b.textContent=Math.ceil(Swal.getTimerLeft()/1000);}}},100);}}).then(function(r){if(r.value){console.log('Sending challenge to '+_this2.props.activePlayer.username);_this2.props.pubnub.publish({message:{type:'challenge',challengedPlayerId:_this2.props.activePlayer.id,challengedPlayerUn:_this2.props.activePlayer.username,challengingPlayerId:_this2.props.player.id,challengingPlayerUn:_this2.props.player.username,challengedCard:msg.message.associatedCard,action:msg.message.action},channel:_this2.props.gameChannel});}else{console.log(\"Letting it slide\");}});}// include buttons to counter OR challenge\n// only for Exchange, other actions are targeted\n// nvm, Exchange belongs in cards with associated car and no counter card\nelse if(msg.message.associatedCard&&msg.message.counterCard){}}else if(_this2.isYourTurn()){Swal.fire({title:'Waiting for other players.',allowOutsideClick:false,allowEscapeKey:false,showConfirmButton:false,timer:globalSwalTimer,timerProgressBar:true}).then(function(r){if(r.dismiss==='timer'){Swal.fire({title:\"You use \".concat(msg.message.action,\"!\"),showConfirmButton:false,timer:1500,icon:'success'});_this2.useAction(msg.message.action);}});}return _context3.abrupt(\"break\",55);case 25:if(_this2.props.player.id===msg.message.counteredPlayerId){Swal.close();Swal.fire({title:\"\".concat(msg.message.counteringPlayerUn,\" is trying to BLOCK your \").concat(msg.message.action,\" with \").concat(_this2.aOrAn(msg.message.counterCard),\" \").concat(msg.message.counterCard,\"!\"),showCancelButton:true,cancelButtonText:'Back down',confirmButtonText:'CHALLENGE',allowOutsideClick:false,allowEscapeKey:false,timer:globalSwalTimer,timerProgressBar:true,html:\"<span class='swal2-text'>Backing down in <b></b></span>\",onBeforeOpen:function onBeforeOpen(){var content=Swal.getContent();setInterval(function(){if(content){var b=content.querySelector('b');if(b&&Swal.getTimerLeft()){b.textContent=Math.ceil(Swal.getTimerLeft()/1000);}}},100);}}).then(function(r){if(r.value){console.log('Sending challenge to '+msg.message.counteringPlayerUn);_this2.props.pubnub.publish({message:{type:'challenge',challengedPlayerId:msg.message.counteringPlayerId,challengedPlayerUn:msg.message.counteringPlayerUn,challengingPlayerId:_this2.props.player.id,challengingPlayerUn:_this2.props.player.username,challengedCard:msg.message.counterCard,action:msg.message.action},channel:_this2.props.gameChannel});}else if(r.dismiss){console.log(\"Where's your honor??\");// send message that blocker won, close swal\n_this2.endTurn();}});}else if(_this2.props.player.id===msg.message.counteringPlayerId){console.log(\"You have attempted to block \".concat(msg.message.counteredPlayerUn,\"'s \").concat(msg.message.action,\"!\"));Swal.fire({title:\"You have attempted to block \".concat(msg.message.counteredPlayerUn,\"'s \").concat(msg.message.action,\"!\"),timer:globalSwalTimer,timerProgressBar:true,allowOutsideClick:false,allowEscapeKey:false,showConfirmButton:false}).then(function(r){if(r.dismiss==='timer'){Swal.fire({title:\"You blocked \".concat(msg.message.counteredPlayerUn,\"'s \").concat(msg.message.action,\"!\"),icon:'success',timer:1500,timerProgressBar:true,allowOutsideClick:false,allowEscapeKey:false,showConfirmButton:false});}});}else{console.log(\"\".concat(msg.message.counteringPlayerUn,\" has attempted to block \").concat(msg.message.counteredPlayerUn,\".\"));if(!_this2.props.player.gameOver){Swal.close();}}return _context3.abrupt(\"break\",55);case 27:if(_this2.props.player.id===msg.message.challengedPlayerId){Swal.close();challengedCard=_this2.props.player.hand.find(function(card){return card.name===msg.message.challengedCard;});if(challengedCard&&!challengedCard.isRevealed){Swal.fire({title:\"\".concat(msg.message.challengingPlayerUn,\" challenged you!\"),showCancelButton:true,confirmButtonText:\"Show my \".concat(msg.message.challengedCard,\".\"),cancelButtonText:\"Lose a card (Hint: don't do this)\"}).then(function(r){if(r.value){_this2.props.pubnub.publish({message:{type:'challengedPlayerWon',challengedPlayerId:msg.message.challengedPlayerId,challengedPlayerUn:msg.message.challengedPlayerUn,challengingPlayerId:msg.message.challengingPlayerId,challengingPlayerUn:msg.message.challengingPlayerUn,challengedCard:msg.message.challengedCard,action:msg.message.action},channel:_this2.props.gameChannel});}else if(r.dismiss){_this2.props.pubnub.publish({message:{type:'challengedPlayerLost',challengedPlayerId:msg.message.challengedPlayerId,challengedPlayerUn:msg.message.challengedPlayerUn,challengingPlayerId:msg.message.challengingPlayerId,challengingPlayerUn:msg.message.challengingPlayerUn,challengedCard:msg.message.challengedCard,action:msg.message.action},channel:_this2.props.gameChannel});}});}else{Swal.fire({title:'You were called out!',timer:1500,timerProgressBar:true,// showConfirmButton: false,\nallowOutsideClick:false,allowEscapeKey:false}).then(function(r){_this2.props.pubnub.publish({message:{type:'challengedPlayerLost',challengedPlayerId:msg.message.challengedPlayerId,challengedPlayerUn:msg.message.challengedPlayerUn,challengingPlayerId:msg.message.challengingPlayerId,challengingPlayerUn:msg.message.challengingPlayerUn,challengedCard:msg.message.challengedCard,action:msg.message.action},channel:_this2.props.gameChannel});});}}else if(_this2.props.player.id===msg.message.challengingPlayerId){console.log(\"You challenged \".concat(msg.message.challengedPlayerUn,\"'s \").concat(msg.message.challengedCard,\"!\"));Swal.fire({title:\"You challenged \".concat(msg.message.challengedPlayerUn,\"'s \").concat(msg.message.challengedCard,\"!\"),showConfirmButton:false,allowOutsideClick:false,allowEscapeKey:false// need to have no timer, wait on challenged player's response\n// timer: globalSwalTimer,\n// timerProgressBar: true,\n});}else{console.log(\"\".concat(msg.message.challengedPlayerUn,\" has been challenged by \").concat(msg.message.challengingPlayerUn,\".\"));if(!_this2.props.player.gameOver){Swal.close();}}return _context3.abrupt(\"break\",55);case 29:if(_this2.props.player.id===msg.message.challengedPlayerId){if(_this2.isYourTurn()){Swal.fire({title:\"You show your \".concat(msg.message.challengedCard,\", winning the challenge!\"),text:\"You use \".concat(msg.message.action,\" and \").concat(msg.message.challengingPlayerUn,\" loses a card.\"),icon:'success',timer:globalSwalTimer,timerProgressBar:true}).then(function(r){_this2.getNewCard(msg.message.challengedCard,function(){return _this2.useAction(msg.message.action,msg.message.challengingPlayerId);});});}else if(!_this2.isYourTurn()){Swal.fire({title:\"You show your \".concat(msg.message.challengedCard,\", winning the challenge!\"),text:\"\".concat(msg.message.challengingPlayerUn,\" loses a card and doesn't get to \").concat(msg.message.action,\".\"),icon:'success',timer:globalSwalTimer,timerProgressBar:true}).then(function(r){return _this2.getNewCard(msg.message.challengedCard);});}}else if(_this2.props.player.id===msg.message.challengingPlayerId){// console.log('fofo')\n// check if challenged card is assassin, if so then lose game, and avoid firing assassinated modal\n// ignore above if going for implementing the stack\nif(_this2.props.player.hand.filter(function(card){return card.isRevealed===true;}).length===1){// console.log('nono')\nSwal.fire({title:\"\".concat(msg.message.challengedPlayerUn,\" had \").concat(_this2.aOrAn(msg.message.challengedCard),\" \").concat(msg.message.challengedCard,\"!\"),timer:2000,showConfirmButton:false,allowOutsideClick:false}).then(function(r){return _this2.gameOver();});}else{Swal.close();Swal.fire({title:\"\".concat(msg.message.challengedPlayerUn,\" had \").concat(_this2.aOrAn(msg.message.challengedCard),\" \").concat(msg.message.challengedCard,\"! You lost the challenge!\"),text:'You lose a card.',icon:'error',allowEscapeKey:false,allowOutsideClick:false,timer:globalSwalTimer,timerProgressBar:true}).then(function(r){return _this2.loseCard();});}}return _context3.abrupt(\"break\",55);case 31:if(_this2.props.player.id===msg.message.challengedPlayerId){// check if challenged card is assassin, if so then lose game, and avoid firing assassinated modal\nif(_this2.props.player.hand.filter(function(card){return card.isRevealed===true;}).length===1){_this2.gameOver();}else{Swal.fire({title:'You lost the challenge!',text:'You lose a card.',icon:'error',allowEscapeKey:false,allowOutsideClick:false,timer:globalSwalTimer,timerProgressBar:true}).then(function(r){return _this2.loseCard();});}}else if(_this2.props.player.id===msg.message.challengingPlayerId){if(_this2.isYourTurn()){_this2.useAction(msg.message.action,msg.message.challengedPlayerId);Swal.fire({title:\"You won the challenge! You use \".concat(msg.message.action,\".\"),text:\"\".concat(msg.message.challengedPlayerUn,\" loses a card.\"),icon:'success',timer:globalSwalTimer,timerProgressBar:true});}else if(!_this2.isYourTurn()){Swal.fire({title:\"You won the challenge! You blocked \".concat(msg.message.challengedPlayerUn,\"'s \").concat(msg.message.action,\"!\"),text:\"\".concat(msg.message.challengedPlayerUn,\" loses a card.\"),icon:'success',timer:globalSwalTimer,timerProgressBar:true});}}return _context3.abrupt(\"break\",55);case 33:if(!(_this2.props.player.id===msg.message.targetPlayerId)){_context3.next=49;break;}_title=\"\".concat(_this2.props.activePlayer.username,\" Couped you!\");_context3.t1=msg.message.action;_context3.next=_context3.t1==='Assassinate'?38:_context3.t1==='Coup'?39:_context3.t1==='Steal'?41:46;break;case 38:_title=\"\".concat(_this2.props.activePlayer.username,\" Assassinated you!\");case 39:Swal.fire({title:_title,showConfirmButton:false,allowOutsideClick:false,timer:2000}).then(function(r){_this2.loseCard();});return _context3.abrupt(\"break\",47);case 41:amt=2;remainder=_this2.props.player.coins-2;if(remainder<0){amt+=remainder;}_this2.updateCoins(-amt);// Swal.fire({\n//   title: `${this.props.activePlayer.username} Stole 2 coins from you!`,\n//   showConfirmButton: false,\n//   allowOutsideClick: false,\n//   timer: 2000,\n// })\nreturn _context3.abrupt(\"break\",47);case 46:console.error(\"Invalid Targeted Action: \".concat(msg.message.action));case 47:_context3.next=50;break;case 49:if(_this2.isYourTurn()){}case 50:return _context3.abrupt(\"break\",55);case 51:console.log(msg.message.text);return _context3.abrupt(\"break\",55);case 53:console.error('Unknown game message.');console.log(msg);case 55:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x2){return _ref4.apply(this,arguments);};}());// }\n// initiate treasury for every player\nthis.props.changeTreasury(-(this.props.players.length*2));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){// console.log(this.props.deck)\n}},{key:\"render\",value:function render(){console.log('hey');return/*#__PURE__*/React.createElement(\"div\",{className:\"game\"},/*#__PURE__*/React.createElement(OpponentsContainer,null),/*#__PURE__*/React.createElement(\"p\",{className:\"whose-turn\"},\"Whose turn: \",this.props.activePlayer.username?this.props.activePlayer.username:null),/*#__PURE__*/React.createElement(\"div\",{className:\"treasury\"},/*#__PURE__*/React.createElement(\"p\",null,\"Treasury: \",this.props.treasury,\" coins\")),/*#__PURE__*/React.createElement(\"div\",{className:\"court-deck\"},/*#__PURE__*/React.createElement(Card,null),/*#__PURE__*/React.createElement(\"p\",null,\"Court Deck: \",this.props.deck.length,\" cards\")),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Player,null));}}]);return Game;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{pubnub:state.connectionReducer.pubnub,gameChannel:state.connectionReducer.gameChannel,isHost:state.connectionReducer.isHost,player:state.playerReducer,players:state.gameReducer.players,deck:state.gameReducer.deck,treasury:state.gameReducer.treasury,whosTurnIsIt:state.gameReducer.whosTurnIsIt,activePlayer:state.gameReducer.activePlayer};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{initDeck:function initDeck(cards){return dispatch({type:'initializeDeck',cards:cards});},updateDeck:function updateDeck(deck){return dispatch({type:'updateDeck',updatedDeck:deck});},updatePlayer:function updatePlayer(player){return dispatch({type:'updatePlayer',player:player});},getNewCard:function getNewCard(card){return dispatch({type:'getNewCard',card:card});},updateHand:function updateHand(cards){return dispatch({type:'updateHand',cards:cards});},changeTreasury:function changeTreasury(amt){return dispatch({type:'changeTreasury',amt:amt});},updateCoins:function updateCoins(amt){return dispatch({type:'updateCoins',amt:amt});},updateTreasury:function updateTreasury(treasury){return dispatch({type:'updateTreasury',treasury:treasury});},setActivePlayer:function setActivePlayer(){return dispatch({type:'setActivePlayer'});},revealCard:function revealCard(i){return dispatch({type:'revealCard',i:i});},endTurn:function endTurn(){return dispatch({type:'endTurn'});},gameOver:function gameOver(){return dispatch({type:'gameOver'});}};};export default connect(mapStateToProps,mapDispatchToProps)(Game);","map":{"version":3,"sources":["/Users/flatironstudentaccount/Development/Module 5/coup-react/frontend/src/components/Game.js"],"names":["React","Swal","connect","Player","OpponentsContainer","Card","globalSwalTimer","Game","initializeGame","deckData","shuffledDeck","shuffleDeck","props","deck","distributeCards","getNewCard","i","length","j","Math","floor","random","newCard","shift","updateDeck","pubnub","publish","message","type","updatedDeck","channel","gameChannel","players","player","card1","card2","playerId","id","cards","isYourTurn","activePlayer","aOrAn","word","test","charAt","updatePlayer","updateTreasury","amt","treasury","updateCoins","useAction","action","targetPlayerId","NaN","console","log","endTurn","remainder","find","coins","numberOfCardsToKeep","hand","filter","card","isRevealed","nextCard","nextCard2","fire","title","error","loseCard","gameOver","focusConfirm","showCancelButton","cancelButtonColor","confirmButtonText","name","cancelButtonText","allowOutsideClick","allowEscapeKey","timer","timerProgressBar","html","onBeforeOpen","setInterval","content","getContent","b","querySelector","getTimerLeft","textContent","ceil","then","r","value","dismiss","round","showConfirmButton","revealCard","challengedCard","fn","oldCard","push","newHand","findIndex","updateHand","close","testMsg","msg","text","hereNow","channels","logPlayers","isHost","targetPlayer","getMessage","changeTreasury","setActivePlayer","currentActivePlayerId","whosTurnIsIt","username","counterCard","undefined","associatedCard","actionsDiv","getActions","counterCards","counterCardBtn","document","createElement","innerHTML","className","addEventListener","prepend","counteredPlayerId","counteredPlayerUn","counteringPlayerId","counteringPlayerUn","challengedPlayerId","challengedPlayerUn","challengingPlayerId","challengingPlayerUn","icon","Component","mapStateToProps","state","connectionReducer","playerReducer","gameReducer","mapDispatchToProps","dispatch","initDeck"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Swal from 'sweetalert2'\nimport { connect } from 'react-redux'\nimport Player from '../containers/Player.js'\nimport OpponentsContainer from '../containers/OpponentsContainer.js'\nimport Card from './Card.js'\nimport './Game.css'\n\nconst globalSwalTimer = 10000\n\nclass Game extends React.Component {\n  componentDidMount(){\n    if (this.props.isHost) {\n      // fetch('http://localhost:3000/deck')\n      // .then(r => r.json())\n      // .then(deckData => {\n      //   this.initializeGame(deckData)\n      // })\n      this.initializeGame()\n    }\n\n    let targetPlayer\n    // if (this.props.gameChannel) {\n      this.props.pubnub.getMessage(this.props.gameChannel, async(msg) => {\n        switch (msg.message.type) {\n          case 'updateDeck':\n            this.props.updateDeck(msg.message.updatedDeck)\n            break\n          case 'updatePlayer':\n            this.props.updatePlayer(msg.message.player)\n            break\n          case 'changeTreasury':\n            this.props.changeTreasury(msg.message.amt)\n            break\n          case 'updateTreasury':\n            this.props.updateTreasury(msg.message.treasury)\n            break\n          case 'updateHand':\n            this.props.setActivePlayer()\n            if (msg.message.playerId === this.props.player.id) {\n              this.props.updateHand(msg.message.cards)\n              // this.updatePlayer(this.props.player)\n              this.updatePlayer()\n            }\n            break\n          case 'endTurn':\n            // Swal.close()\n            const currentActivePlayerId = this.props.activePlayer.id\n            this.props.endTurn()\n            this.props.setActivePlayer()\n            if (this.props.activePlayer.id === currentActivePlayerId && this.isYourTurn()) {\n              Swal.close()\n              Swal.fire({\n                title: 'u win gj gg',\n                confirmButtonText: 'New Game?',\n                allowOutsideClick: false\n              })\n            }\n            console.log(`${this.props.players[this.props.whosTurnIsIt].username}'s turn.`)\n            break\n          case 'target':\n            targetPlayer = this.props.players.find(player => player.id === msg.message.targetPlayerId)\n            if (msg.message.action === 'Coup') {\n              if (this.isYourTurn()) {\n                this.updateCoins(-7)\n                this.updateTreasury(7)\n                Swal.fire({\n                  title: `You spent 7 coins and Couped ${targetPlayer.username}!`,\n                  showConfirmButton: false,\n                  timer: 2000,\n                })\n                this.useAction(msg.message.action, targetPlayer.id)\n              }\n\n              // if targeted action is not Coup, i.e. Assassinate/Steal\n            } else {\n              if (this.props.player.id === targetPlayer.id) {\n                let counterCard = undefined\n\n                Swal.fire({\n                  title: `${this.props.activePlayer.username} is trying to use ${msg.message.action} on you with ${this.aOrAn(msg.message.associatedCard)} ${msg.message.associatedCard}!`,\n                  timer: globalSwalTimer,\n                  timerProgressBar: true,\n                  confirmButtonText: 'CHALLENGE',\n                  showCancelButton: true,\n                  cancelButtonText: `Let ${this.props.activePlayer.username} use ${msg.message.action}. :(`,\n                  html: `<span class='swal2-text'>Letting ${this.props.activePlayer.username} use ${msg.message.action} in <b></b></span>`,\n                  onBeforeOpen: () => {\n                    setInterval(() => {\n                      const content = Swal.getContent()\n                      if (content) {\n                        const b = content.querySelector('b')\n                        if (b && Swal.getTimerLeft()) {\n                          b.textContent = Math.ceil(Swal.getTimerLeft() / 1000)\n                        }\n                      }\n                    }, 100)\n\n                    const actionsDiv = Swal.getActions()\n\n                    for (const card of msg.message.counterCards) {\n                      const counterCardBtn = document.createElement('button')\n                      counterCardBtn.innerHTML = `BLOCK with ${card}`\n                      counterCardBtn.className = \"swal2-confirm swal2-styled\"\n                      // eslint-disable-next-line\n                      counterCardBtn.addEventListener('click', () => {\n                        counterCard = card\n                        Swal.close()\n                      })\n                      actionsDiv.prepend(counterCardBtn)\n                    }\n                  }\n                })\n                .then(r => {\n                  // console.log(r)\n                  if (counterCard) {\n                    console.log(`Attempting to block with a(n) ${counterCard}.`)\n                    this.props.pubnub.publish({\n                      message: {\n                        type: 'counter',\n                        action: msg.message.action,\n                        counterCard: counterCard,\n                        counteredPlayerId: this.props.activePlayer.id,\n                        counteredPlayerUn: this.props.activePlayer.username,\n                        counteringPlayerId: this.props.player.id,\n                        counteringPlayerUn: this.props.player.username,\n                      },\n                      channel: this.props.gameChannel\n                    })\n                  } else if (r.value) {\n                    console.log('Sending challenge to ' + msg.message.counteringPlayerUn)\n                    this.props.pubnub.publish({\n                      message: {\n                        type: 'challenge',\n                        challengedPlayerId: this.props.activePlayer.id,\n                        challengedPlayerUn: this.props.activePlayer.username,\n                        challengingPlayerId: this.props.player.id,\n                        challengingPlayerUn: this.props.player.username,\n                        challengedCard: msg.message.associatedCard,\n                        action: msg.message.action,\n                      },\n                      channel: this.props.gameChannel\n                    })\n                  } else if (r.dismiss) {\n                    console.log('ok :(')\n                  }\n                })\n              } else if (this.isYourTurn()) {\n                let endTurn = true\n                let title = `You Stole 2 coins from ${targetPlayer.username}!`\n                if (msg.message.action === 'Assassinate') {\n                  this.updateCoins(-3)\n                  this.updateTreasury(3)\n                  title = `You spent 3 coins and Assassinated ${targetPlayer.username}!`\n                  endTurn = false\n                }\n                Swal.fire({\n                  title: `Waiting for ${targetPlayer.username}.`,\n                  showConfirmButton: false,\n                  allowOutsideClick: false,\n                  timer: globalSwalTimer,\n                  timerProgressBar: true,\n                })\n                .then(r => {\n                  if (r.dismiss === 'timer') {\n                    Swal.fire({\n                      title: title,\n                      showConfirmButton: false,\n                      timer: 1500,\n                      icon: 'success'\n                    })\n                    this.useAction(msg.message.action, targetPlayer.id)\n                    endTurn && this.endTurn()\n                  }\n                })\n              }\n            }\n            break\n          case 'alert':\n            if (!this.isYourTurn() && !this.props.player.gameOver) {\n              if (!msg.message.associatedCard && msg.message.counterCard) {\n                Swal.fire({\n                  title: `${this.props.activePlayer.username} is trying to use ${msg.message.action}!`,\n                  timer: globalSwalTimer,\n                  timerProgressBar: true,\n                  showCancelButton: true,\n                  cancelButtonText: `Let ${this.props.activePlayer.username} use ${msg.message.action}... this time.`,\n                  confirmButtonText: `BLOCK with ${this.aOrAn(msg.message.counterCard)} ${msg.message.counterCard}.`,\n                  html: `<span class='swal2-text'>Letting ${this.props.activePlayer.username} use ${msg.message.action} in <b></b></span>`,\n                  onBeforeOpen: () => {\n                    setInterval(() => {\n                      const content = Swal.getContent()\n                      if (content) {\n                        const b = content.querySelector('b')\n                        if (b && Swal.getTimerLeft()) {\n                          b.textContent = Math.ceil(Swal.getTimerLeft() / 1000)\n                        }\n                      }\n                    }, 100)\n                  }\n                })\n                .then(r => {\n                  if (r.value) {\n                    this.props.pubnub.publish({\n                      message: {\n                        type: 'counter',\n                        action: msg.message.action,\n                        counterCard: msg.message.counterCard,\n                        counteredPlayerId: this.props.activePlayer.id,\n                        counteredPlayerUn: this.props.activePlayer.username,\n                        counteringPlayerId: this.props.player.id,\n                        counteringPlayerUn: this.props.player.username,\n                      },\n                      channel: this.props.gameChannel\n                    })\n                  } else {\n                    console.log(\"Letting it slide\")\n                  }\n                })\n              } else if (msg.message.associatedCard && !msg.message.counterCard) {\n                Swal.fire({\n                  title: `${this.props.activePlayer.username} is trying to use ${msg.message.action} with ${this.aOrAn(msg.message.associatedCard)} ${msg.message.associatedCard}!`,\n                  timer: globalSwalTimer,\n                  timerProgressBar: true,\n                  showCancelButton: true,\n                  cancelButtonText: `Let ${this.props.activePlayer.username} use ${msg.message.action}... this time.`,\n                  confirmButtonText: `CHALLENGE`,\n                  html: `<span class='swal2-text'>Letting ${this.props.activePlayer.username} use ${msg.message.action} in <b></b></span>`,\n                  onBeforeOpen: () => {\n                    setInterval(() => {\n                      const content = Swal.getContent()\n                      if (content) {\n                        const b = content.querySelector('b')\n                        if (b && Swal.getTimerLeft()) {\n                          b.textContent = Math.ceil(Swal.getTimerLeft() / 1000)\n                        }\n                      }\n                    }, 100)\n                  }\n                })\n                .then(r => {\n                  if (r.value) {\n                    console.log('Sending challenge to ' + this.props.activePlayer.username)\n                    this.props.pubnub.publish({\n                      message: {\n                        type: 'challenge',\n                        challengedPlayerId: this.props.activePlayer.id,\n                        challengedPlayerUn: this.props.activePlayer.username,\n                        challengingPlayerId: this.props.player.id,\n                        challengingPlayerUn: this.props.player.username,\n                        challengedCard: msg.message.associatedCard,\n                        action: msg.message.action,\n                      },\n                      channel: this.props.gameChannel\n                    })\n                  } else {\n                    console.log(\"Letting it slide\")\n                  }\n                })\n              }\n              // include buttons to counter OR challenge\n              // only for Exchange, other actions are targeted\n              // nvm, Exchange belongs in cards with associated car and no counter card\n              else if (msg.message.associatedCard && msg.message.counterCard) {\n                \n              }\n            } else if (this.isYourTurn()) {\n              Swal.fire({\n                title: 'Waiting for other players.',\n                allowOutsideClick: false,\n                allowEscapeKey: false,\n                showConfirmButton: false,\n                timer: globalSwalTimer,\n                timerProgressBar: true,\n              })\n              .then(r => {\n                if (r.dismiss === 'timer') {\n                  Swal.fire({\n                    title: `You use ${msg.message.action}!`,\n                    showConfirmButton: false,\n                    timer: 1500,\n                    icon: 'success'\n                  })\n                  this.useAction(msg.message.action)\n                }\n              })\n            }\n            break\n          case 'counter':\n            if (this.props.player.id === msg.message.counteredPlayerId) {\n              Swal.close()\n              Swal.fire({\n                title: `${msg.message.counteringPlayerUn} is trying to BLOCK your ${msg.message.action} with ${this.aOrAn(msg.message.counterCard)} ${msg.message.counterCard}!`,\n                showCancelButton: true,\n                cancelButtonText: 'Back down',\n                confirmButtonText: 'CHALLENGE',\n                allowOutsideClick: false,\n                allowEscapeKey: false,\n                timer: globalSwalTimer,\n                timerProgressBar: true,\n                html: \"<span class='swal2-text'>Backing down in <b></b></span>\",\n                onBeforeOpen: () => {\n                  const content = Swal.getContent()\n                  setInterval(() => {\n                    if (content) {\n                      const b = content.querySelector('b')\n                      if (b && Swal.getTimerLeft()) {\n                        b.textContent = Math.ceil(Swal.getTimerLeft() / 1000)\n                      }\n                      \n                    }\n                  }, 100)\n                }\n              })\n              .then(r => {\n                if (r.value) {\n                  console.log('Sending challenge to ' + msg.message.counteringPlayerUn)\n                  this.props.pubnub.publish({\n                    message: {\n                      type: 'challenge',\n                      challengedPlayerId: msg.message.counteringPlayerId,\n                      challengedPlayerUn: msg.message.counteringPlayerUn,\n                      challengingPlayerId: this.props.player.id,\n                      challengingPlayerUn: this.props.player.username,\n                      challengedCard: msg.message.counterCard,\n                      action: msg.message.action,\n                    },\n                    channel: this.props.gameChannel\n                  })\n                } else if (r.dismiss) {\n                  console.log(\"Where's your honor??\")\n                  // send message that blocker won, close swal\n                  this.endTurn()\n                }\n              })\n            } else if (this.props.player.id === msg.message.counteringPlayerId) {\n              console.log(`You have attempted to block ${msg.message.counteredPlayerUn}'s ${msg.message.action}!`)\n              Swal.fire({\n                title: `You have attempted to block ${msg.message.counteredPlayerUn}'s ${msg.message.action}!`,\n                timer: globalSwalTimer,\n                timerProgressBar: true,\n                allowOutsideClick: false,\n                allowEscapeKey: false,\n                showConfirmButton: false,\n              })\n              .then(r => {\n                if (r.dismiss === 'timer') {\n                  Swal.fire({\n                    title: `You blocked ${msg.message.counteredPlayerUn}'s ${msg.message.action}!`,\n                    icon: 'success',\n                    timer: 1500,\n                    timerProgressBar: true,\n                    allowOutsideClick: false,\n                    allowEscapeKey: false,\n                    showConfirmButton: false,\n                  })\n                }\n              })\n            } else {\n              console.log(`${msg.message.counteringPlayerUn} has attempted to block ${msg.message.counteredPlayerUn}.`)\n              if (!this.props.player.gameOver) {\n                Swal.close()\n              }\n            }\n            break\n          case 'challenge':\n            if (this.props.player.id === msg.message.challengedPlayerId) {\n              Swal.close()\n              const challengedCard = this.props.player.hand.find(card => card.name === msg.message.challengedCard)\n              if (challengedCard && !challengedCard.isRevealed) {\n                Swal.fire({\n                  title: `${msg.message.challengingPlayerUn} challenged you!`,\n                  showCancelButton: true,\n                  confirmButtonText: `Show my ${msg.message.challengedCard}.`,\n                  cancelButtonText: \"Lose a card (Hint: don't do this)\",\n                })\n                .then(r => {\n                  if (r.value) {\n                    this.props.pubnub.publish({\n                      message: {\n                        type: 'challengedPlayerWon',\n                        challengedPlayerId: msg.message.challengedPlayerId,\n                        challengedPlayerUn: msg.message.challengedPlayerUn,\n                        challengingPlayerId: msg.message.challengingPlayerId,\n                        challengingPlayerUn: msg.message.challengingPlayerUn,\n                        challengedCard: msg.message.challengedCard,\n                        action: msg.message.action,\n                      },\n                      channel: this.props.gameChannel\n                    })\n                  } else if (r.dismiss) {\n                    this.props.pubnub.publish({\n                      message: {\n                        type: 'challengedPlayerLost',\n                        challengedPlayerId: msg.message.challengedPlayerId,\n                        challengedPlayerUn: msg.message.challengedPlayerUn,\n                        challengingPlayerId: msg.message.challengingPlayerId,\n                        challengingPlayerUn: msg.message.challengingPlayerUn,\n                        challengedCard: msg.message.challengedCard,\n                        action: msg.message.action,\n                      },\n                      channel: this.props.gameChannel\n                    })\n                  }\n                })\n              } else {\n                Swal.fire({\n                  title: 'You were called out!',\n                  timer: 1500,\n                  timerProgressBar: true,\n                  // showConfirmButton: false,\n                  allowOutsideClick: false,\n                  allowEscapeKey: false,\n                })\n                .then(r => {\n                  this.props.pubnub.publish({\n                    message: {\n                      type: 'challengedPlayerLost',\n                      challengedPlayerId: msg.message.challengedPlayerId,\n                      challengedPlayerUn: msg.message.challengedPlayerUn,\n                      challengingPlayerId: msg.message.challengingPlayerId,\n                      challengingPlayerUn: msg.message.challengingPlayerUn,\n                      challengedCard: msg.message.challengedCard,\n                      action: msg.message.action,\n                    },\n                    channel: this.props.gameChannel\n                  })\n                })\n              }\n            } else if (this.props.player.id === msg.message.challengingPlayerId) {\n              console.log(`You challenged ${msg.message.challengedPlayerUn}'s ${msg.message.challengedCard}!`)\n              Swal.fire({\n                title: `You challenged ${msg.message.challengedPlayerUn}'s ${msg.message.challengedCard}!`,\n                showConfirmButton: false,\n                allowOutsideClick: false,\n                allowEscapeKey: false,\n                // need to have no timer, wait on challenged player's response\n                // timer: globalSwalTimer,\n                // timerProgressBar: true,\n              })\n            } else {\n              console.log(`${msg.message.challengedPlayerUn} has been challenged by ${msg.message.challengingPlayerUn}.`)\n              if (!this.props.player.gameOver) {\n                Swal.close()\n              }\n            }\n            break\n          case 'challengedPlayerWon':\n            if (this.props.player.id === msg.message.challengedPlayerId) {\n              if (this.isYourTurn()) {\n                Swal.fire({\n                  title: `You show your ${msg.message.challengedCard}, winning the challenge!`,\n                  text: `You use ${msg.message.action} and ${msg.message.challengingPlayerUn} loses a card.`,\n                  icon: 'success',\n                  timer: globalSwalTimer,\n                  timerProgressBar: true,\n                })\n                .then(r => {\n                  this.getNewCard(msg.message.challengedCard, () => this.useAction(msg.message.action, msg.message.challengingPlayerId))\n                })\n              } else if (!this.isYourTurn()) {\n                Swal.fire({\n                  title: `You show your ${msg.message.challengedCard}, winning the challenge!`,\n                  text: `${msg.message.challengingPlayerUn} loses a card and doesn't get to ${msg.message.action}.`,\n                  icon: 'success',\n                  timer: globalSwalTimer,\n                  timerProgressBar: true,\n                })\n                .then(r => this.getNewCard(msg.message.challengedCard))\n              }\n            } else if (this.props.player.id === msg.message.challengingPlayerId) {\n              // console.log('fofo')\n              // check if challenged card is assassin, if so then lose game, and avoid firing assassinated modal\n              // ignore above if going for implementing the stack\n              if (this.props.player.hand.filter(card => card.isRevealed === true).length === 1) {\n              // console.log('nono')\n\n                Swal.fire({\n                  title: `${msg.message.challengedPlayerUn} had ${this.aOrAn(msg.message.challengedCard)} ${msg.message.challengedCard}!`,\n                  timer: 2000,\n                  showConfirmButton: false,\n                  allowOutsideClick: false,\n                })\n                .then(r => this.gameOver())\n              } else {\n                Swal.close()\n                Swal.fire({\n                  title: `${msg.message.challengedPlayerUn} had ${this.aOrAn(msg.message.challengedCard)} ${msg.message.challengedCard}! You lost the challenge!`,\n                  text: 'You lose a card.',\n                  icon: 'error',\n                  allowEscapeKey: false,\n                  allowOutsideClick: false,\n                  timer: globalSwalTimer,\n                  timerProgressBar: true,\n                })\n                .then(r => this.loseCard())\n              }\n            }\n            break\n          case 'challengedPlayerLost':\n            if (this.props.player.id === msg.message.challengedPlayerId) {\n              // check if challenged card is assassin, if so then lose game, and avoid firing assassinated modal\n\n              if (this.props.player.hand.filter(card => card.isRevealed === true).length === 1) {\n                this.gameOver()\n              } else {\n                Swal.fire({\n                  title: 'You lost the challenge!',\n                  text: 'You lose a card.',\n                  icon: 'error',\n                  allowEscapeKey: false,\n                  allowOutsideClick: false,\n                  timer: globalSwalTimer,\n                  timerProgressBar: true,\n                })\n                .then(r => this.loseCard())  \n              }\n            } else if (this.props.player.id === msg.message.challengingPlayerId) {\n              if (this.isYourTurn()) {\n                this.useAction(msg.message.action, msg.message.challengedPlayerId)\n                Swal.fire({\n                  title: `You won the challenge! You use ${msg.message.action}.`,\n                  text: `${msg.message.challengedPlayerUn} loses a card.`,\n                  icon: 'success',\n                  timer: globalSwalTimer,\n                  timerProgressBar: true,\n                })\n              } else if (!this.isYourTurn()) {\n                Swal.fire({\n                  title: `You won the challenge! You blocked ${msg.message.challengedPlayerUn}'s ${msg.message.action}!`,\n                  text: `${msg.message.challengedPlayerUn} loses a card.`,\n                  icon: 'success',\n                  timer: globalSwalTimer,\n                  timerProgressBar: true,\n                })\n              }\n            }\n            break\n          case 'useTargetedAction':\n            // targetPlayer = this.props.players.find(player => player.id === msg.message.targetPlayerId)\n            if (this.props.player.id === msg.message.targetPlayerId) {\n              let title = `${this.props.activePlayer.username} Couped you!`\n              switch (msg.message.action) {\n                case 'Assassinate':\n                  title = `${this.props.activePlayer.username} Assassinated you!`\n                // eslint-disable-next-line\n                case 'Coup':\n                  Swal.fire({\n                    title: title,\n                    showConfirmButton: false,\n                    allowOutsideClick: false,\n                    timer: 2000,\n                  })\n                  .then(r => {this.loseCard()})\n                  break\n                case 'Steal':\n                  let amt = 2\n                  const remainder = this.props.player.coins - 2\n                  if (remainder < 0) {\n                    amt += remainder\n                  }\n                  this.updateCoins(-amt)\n                  // Swal.fire({\n                  //   title: `${this.props.activePlayer.username} Stole 2 coins from you!`,\n                  //   showConfirmButton: false,\n                  //   allowOutsideClick: false,\n                  //   timer: 2000,\n                  // })\n                  break\n                default:\n                  console.error(`Invalid Targeted Action: ${msg.message.action}`)\n              }\n            } else if (this.isYourTurn()) {\n\n            }\n            break\n          case 'log':\n            console.log(msg.message.text)\n            break\n          default:\n            console.error('Unknown game message.')\n            console.log(msg)\n        }\n      })\n    // }\n\n    // initiate treasury for every player\n    this.props.changeTreasury(-(this.props.players.length * 2))\n  }\n  \n  componentDidUpdate() {\n    // console.log(this.props.deck)\n\n  }\n  \n  initializeGame = (deckData) => {\n  // initializeGame = (deckData) => {\n    // let deck = deckData.cards.map(card => ({...card, isRevealed: false}))\n    const shuffledDeck = this.shuffleDeck(this.props.deck)\n    this.distributeCards(shuffledDeck)\n  }\n\n  shuffleDeck = (deck = [...this.props.deck], getNewCard = false) => {\n    for (let i = deck.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [deck[i], deck[j]] = [deck[j], deck[i]]\n    }\n\n    if (getNewCard) {\n      const newCard = deck.shift()\n      this.updateDeck(deck)\n      return newCard\n    } else {\n      this.updateDeck(deck)\n      return deck\n    }\n  }\n\n  updateDeck = (deck) => {\n    this.props.pubnub.publish({\n      message: { type: 'updateDeck', updatedDeck: deck },\n      channel: this.props.gameChannel\n    })\n  }\n\n  // consider sending message for everyone to draw 2 cards\n  distributeCards = (deck) => {\n    for (const player of this.props.players) {\n      const card1 = deck.shift()\n      const card2 = deck.shift()\n\n      this.props.pubnub.publish({\n        message: {\n          type: 'updateHand',\n          playerId: player.id,\n          cards: [card1, card2]\n        },\n        channel: this.props.gameChannel\n      })\n    }\n\n    this.updateDeck(deck)\n  }\n\n  // ehhhhhhhhh\n  // drawCard = () => {\n  //   const card = this.props.deck[0]\n  //   console.log('drew ' + card)\n  //   this.props.drawCard(card)\n  //   this.props.removeCardFromDeck()\n  // }\n  \n  isYourTurn = () => {\n    return (this.props.activePlayer.id === this.props.player.id)\n  }\n\n  aOrAn = (word) => {\n    return /[aeiouAEIOU]/.test(word.charAt(0)) ? \"an\" : \"a\"\n  }\n\n  // need this in case players aren't automatically synced, which they probably won't be\n  updatePlayer = () => {\n    // console.log(this.props.player.coins + 'coins')\n    this.props.pubnub.publish({\n      message: {\n        type: 'updatePlayer',\n        player: this.props.player\n      },\n      channel: this.props.gameChannel\n    })\n  }\n\n  updateTreasury = (amt) => {\n    // console.log(this.props.treasury)\n    this.props.pubnub.publish({\n      message: {\n        type: 'updateTreasury',\n        treasury: this.props.treasury + amt\n      },\n      channel: this.props.gameChannel\n    })\n  }\n\n  updateCoins = async(amt) => {\n    await this.props.updateCoins(amt)\n    this.updatePlayer()\n  }\n\n  // may need to move up or down\n  useAction = (action, targetPlayerId = NaN) => {\n    console.log('Using ' + action)\n    console.log('Target player ID: ' + targetPlayerId)\n    switch (action) {\n      // income is handled in Player.js\n      case 'Foreign Aid':\n        this.updateCoins(2)\n        this.updateTreasury(-2)\n        this.endTurn()\n        break\n      case 'Tax':\n        this.updateCoins(3)\n        this.updateTreasury(-3)\n        this.endTurn()\n        break\n      case 'Steal':\n        let amt = 2\n        const remainder = this.props.players.find(player => player.id === targetPlayerId).coins - 2\n        if (remainder < 0) {\n          amt += remainder\n        }\n        this.updateCoins(amt)\n      // eslint-disable-next-line\n      case 'Coup':\n      case 'Assassinate':\n        this.props.pubnub.publish({\n          message: {\n            type: 'useTargetedAction',\n            action: action,\n            targetPlayerId: targetPlayerId\n          },\n          channel: this.props.gameChannel\n        })\n        break\n      case 'Exchange':\n        const numberOfCardsToKeep = this.props.player.hand.filter(card => card.isRevealed === false).length\n        const nextCard = this.props.deck.shift()\n        const nextCard2 = this.props.deck.shift()\n        console.log(nextCard, nextCard2)\n        Swal.fire({\n          title: `Choose ${numberOfCardsToKeep} card(s) to keep.`\n\n        })\n        break\n      default:\n        console.error('Invalid action.')\n    }\n  }\n\n  // pick card to reveal, or lose one randomly based on timer\n  loseCard = () => {\n    /* if player only has one unrevealed card, player loses the game */\n    if (this.props.player.hand.filter(card => card.isRevealed === true).length === 1) {\n      this.gameOver()\n      return\n    }\n\n    Swal.fire({\n      title: `Pick a card to lose.`,\n      focusConfirm: false,\n      showCancelButton: true,\n      cancelButtonColor: '#3085d6',\n      confirmButtonText: `Lose ${this.props.player.hand[0].name}`,\n      cancelButtonText: `Lose ${this.props.player.hand[1].name}`,\n      allowOutsideClick: false,\n      allowEscapeKey: false,\n      timer: globalSwalTimer,\n      timerProgressBar: true,\n      html: \"<span class='swal2-text'>Losing a random card in <b></b></span>\",\n      onBeforeOpen: () => {\n        setInterval(() => {\n          const content = Swal.getContent()\n          if (content) {\n            const b = content.querySelector('b')\n            if (b && Swal.getTimerLeft()) {\n              b.textContent = Math.ceil(Swal.getTimerLeft() / 1000)\n            }\n          }\n        }, 100)\n      }\n      // footer: 'fuck',\n    })\n    .then(r => {\n      // console.log(r)\n      let i\n      if (r.value) {\n        i = 0\n      } else if (r.dismiss === 'cancel') {\n        i = 1\n      } else {\n        i = Math.round(Math.random())\n      }\n      \n      Swal.fire({\n        title: `Lost ${this.props.player.hand[i].name}!`,\n        timer: 1500,\n        showConfirmButton: false,\n      })\n      .then(r => {\n        this.props.revealCard(i)\n        this.updatePlayer()\n        this.endTurn()\n      })\n    })\n  }\n\n  // after showing winning a card, shuffle it into deck and draw a new card\n  getNewCard = (challengedCard, fn) => {\n    const oldCard = this.props.player.hand.find(card => card.name === challengedCard)\n    this.props.deck.push(oldCard)\n    const newCard = this.shuffleDeck(this.props.deck, true)\n    console.log(`You shuffled in your ${oldCard.name} and got ${this.aOrAn(newCard.name)} ${newCard.name}!`)\n    Swal.fire({\n      title: `You shuffled in your ${oldCard.name} and got ${this.aOrAn(newCard.name)} ${newCard.name}!`,\n      timer: 2000,\n      showConfirmButton: false,\n    })\n    .then(fn)\n\n    const newHand = [...this.props.player.hand]\n    newHand[newHand.findIndex(card => card.id === oldCard.id)] = newCard\n    this.props.updateHand(newHand)\n    this.updatePlayer()\n  }\n\n  endTurn = () => {\n    this.props.pubnub.publish({\n      message: { type: 'endTurn' },\n      channel: this.props.gameChannel\n    })\n  }\n\n  gameOver = async() => {\n    Swal.close()\n    Swal.fire({\n      title: 'Game over, man!',\n      showConfirmButton: false,\n      allowOutsideClick: false\n    })\n    // reveal remaining card\n    const newHand = [...this.props.player.hand]\n    const i = (this.props.player.hand[0].isRevealed) ? 1 : 0\n    newHand[i] = {...newHand[i], isRevealed: true}\n    this.props.updateHand(newHand)\n\n    // skip player in turn order; cannot just remove player from players list or their cards will also be removed\n\n    // await next line? problem with determining next turn when a player is defeated\n    await this.props.gameOver()\n    await this.updatePlayer()\n    this.endTurn()\n  }\n\n  testMsg = (msg) => {\n    this.props.pubnub.publish({\n      message: {type: 'log', text: msg},\n      channel: this.props.gameChannel\n    })\n  }\n\n  hereNow = () => {\n    this.props.pubnub.hereNow({\n      channels: [this.props.gameChannel]\n    })\n    .then(console.log)\n  }\n\n  logPlayers = () => {\n    console.log(this.props.players)\n  }\n\n  render() {\n    console.log('hey')\n    return (\n      <div className='game'>\n        <OpponentsContainer />\n        <p className='whose-turn'>Whose turn: {this.props.activePlayer.username ? this.props.activePlayer.username : null}</p>\n\n        <div className='treasury'>\n          <p>Treasury: {this.props.treasury} coins</p>\n        </div>\n\n        <div className='court-deck'>\n          <Card />\n          <p>Court Deck: {this.props.deck.length} cards</p>\n        </div>\n        <br/>\n        {/* <p>Deck: {this.props.deck.map(card => card.name).join(', ')}</p> */}\n        {/* <button onClick={()=>this.shuffleDeck()}>Shuffle Deck</button> */}\n        {/* <button onClick={() => this.testMsg('GAME YO')}>message</button> */}\n        {/* <button onClick={this.hereNow}>log who's here</button> */}\n        {/* <button onClick={this.logPlayers}>log players</button> */}\n\n        {/* <br/><button onClick={this.endTurn}>End Turn</button> */}\n\n        {/* <p style={{fontSize: '20px'}}>Players: {this.props.players.map(player => player.username).join(', ')}</p> */}\n        <Player />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    pubnub: state.connectionReducer.pubnub,\n    gameChannel: state.connectionReducer.gameChannel,\n    isHost: state.connectionReducer.isHost,\n    player: state.playerReducer,\n    players: state.gameReducer.players,\n    deck: state.gameReducer.deck,\n    treasury: state.gameReducer.treasury,\n    whosTurnIsIt: state.gameReducer.whosTurnIsIt,\n    activePlayer: state.gameReducer.activePlayer,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    initDeck: ((cards) => dispatch({type: 'initializeDeck', cards: cards})),\n    updateDeck: ((deck) => dispatch({type: 'updateDeck', updatedDeck: deck})),\n    updatePlayer: ((player) => dispatch({type: 'updatePlayer', player: player})),\n    getNewCard: ((card) => dispatch({type: 'getNewCard', card: card})),\n    updateHand: ((cards) => dispatch({type: 'updateHand', cards: cards})),\n    changeTreasury: ((amt) => dispatch({type: 'changeTreasury', amt: amt})),\n    updateCoins: ((amt) => dispatch({type: 'updateCoins', amt: amt})),\n    updateTreasury: ((treasury) => dispatch({type: 'updateTreasury', treasury: treasury})),\n    setActivePlayer: (() => dispatch({type: 'setActivePlayer'})),\n    revealCard: ((i) => dispatch({type: 'revealCard', i: i})),\n    endTurn: (() => dispatch({type: 'endTurn'})),\n    gameOver: (() => dispatch({type: 'gameOver'})),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game)\n"]},"metadata":{},"sourceType":"module"}