{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudentaccount/Development/Module 5/mod_5_final_project/frontend/src/containers/Player.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './Player.css';\n\nclass Player extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.takeAction = action => {\n      console.log(action);\n    };\n\n    this.nextTurn = () => {\n      this.props.pubnub.publish({\n        message: {\n          type: 'nextTurn'\n        },\n        channel: this.props.gameChannel\n      });\n    };\n  }\n\n  componentDidMount() {// this.props.pubnub.getMessage(this.props.gameChannel, (msg) => {\n    //   switch (msg.message.type) {\n    //     case 'nextTurn':\n    //       this.props.nextTurn()\n    //       console.log(this.props.whosTurnIsIt)\n    //       this.props.setActivePlayer()\n    //       break\n    //     case 'log':\n    //       console.log(msg.message.text)\n    //       break\n    //     default:\n    //       console.error('Unknown player message.')\n    //       console.log(msg)\n    //   }\n    // })\n  }\n\n  componentDidUpdate() {// console.log(this.props.player)\n  }\n\n  render() {\n    const player = this.props.player;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"player-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, player.username), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, \"Current hand: \", player.hand.map(card => card.name).join(', ')), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"Coins: \", player.coins), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"Actions: \", player.actions.map(action => /*#__PURE__*/React.createElement(\"button\", {\n      onClick: action => this.takeAction(action),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, action))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    pubnub: state.connectionReducer.pubnub,\n    gameChannel: state.connectionReducer.gameChannel,\n    isHost: state.connectionReducer.isHost,\n    players: state.connectionReducer.players,\n    deck: state.gameReducer.deck,\n    player: state.playerReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    nextTurn: () => dispatch({\n      type: 'nextTurn'\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);","map":{"version":3,"sources":["/Users/flatironstudentaccount/Development/Module 5/mod_5_final_project/frontend/src/containers/Player.js"],"names":["React","connect","Player","Component","takeAction","action","console","log","nextTurn","props","pubnub","publish","message","type","channel","gameChannel","componentDidMount","componentDidUpdate","render","player","username","hand","map","card","name","join","coins","actions","mapStateToProps","state","connectionReducer","isHost","players","deck","gameReducer","playerReducer","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,cAAP;;AAEA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAuBnCC,UAvBmC,GAuBrBC,MAAD,IAAY;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,KAzBkC;;AAAA,SA2BnCG,QA3BmC,GA2BxB,MAAM;AACf,WAAKC,KAAL,CAAWC,MAAX,CAAkBC,OAAlB,CAA0B;AACxBC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SADe;AAExBC,QAAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM;AAFI,OAA1B;AAID,KAhCkC;AAAA;;AACnCC,EAAAA,iBAAiB,GAAG,CAClB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AACDC,EAAAA,kBAAkB,GAAG,CACnB;AACD;;AAaDC,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG,KAAKV,KAAL,CAAWU,MAA1B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BA,MAAM,CAACC,QAAnC,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAkBD,MAAM,CAACE,IAAP,CAAYC,GAAZ,CAAgBC,IAAI,IAAIA,IAAI,CAACC,IAA7B,EAAmCC,IAAnC,CAAwC,IAAxC,CAAlB,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAWN,MAAM,CAACO,KAAlB,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeP,MAAM,CAACQ,OAAP,CAAeL,GAAf,CAAmBjB,MAAM,iBACtC;AAAQ,MAAA,OAAO,EAAEA,MAAM,IAAI,KAAKD,UAAL,CAAgBC,MAAhB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsDA,MAAtD,CADa,CAAf,CAJF,CADF;AASD;;AA7CkC;;AAgDrC,MAAMuB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLnB,IAAAA,MAAM,EAAEmB,KAAK,CAACC,iBAAN,CAAwBpB,MAD3B;AAELK,IAAAA,WAAW,EAAEc,KAAK,CAACC,iBAAN,CAAwBf,WAFhC;AAGLgB,IAAAA,MAAM,EAAEF,KAAK,CAACC,iBAAN,CAAwBC,MAH3B;AAILC,IAAAA,OAAO,EAAEH,KAAK,CAACC,iBAAN,CAAwBE,OAJ5B;AAKLC,IAAAA,IAAI,EAAEJ,KAAK,CAACK,WAAN,CAAkBD,IALnB;AAMLd,IAAAA,MAAM,EAAEU,KAAK,CAACM;AANT,GAAP;AAQD,CATD;;AAWA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACL7B,IAAAA,QAAQ,EAAG,MAAM6B,QAAQ,CAAC;AAACxB,MAAAA,IAAI,EAAE;AAAP,KAAD;AADpB,GAAP;AAGD,CAJD;;AAMA,eAAeZ,OAAO,CAAC2B,eAAD,EAAkBQ,kBAAlB,CAAP,CAA6ClC,MAA7C,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport './Player.css'\n\nclass Player extends React.Component {\n  componentDidMount() {\n    // this.props.pubnub.getMessage(this.props.gameChannel, (msg) => {\n    //   switch (msg.message.type) {\n\n    //     case 'nextTurn':\n    //       this.props.nextTurn()\n    //       console.log(this.props.whosTurnIsIt)\n    //       this.props.setActivePlayer()\n    //       break\n    //     case 'log':\n    //       console.log(msg.message.text)\n    //       break\n    //     default:\n    //       console.error('Unknown player message.')\n    //       console.log(msg)\n    //   }\n    // })\n  }\n  componentDidUpdate() {\n    // console.log(this.props.player)\n  }\n\n  takeAction = (action) => {\n    console.log(action)\n  }\n\n  nextTurn = () => {\n    this.props.pubnub.publish({\n      message: { type: 'nextTurn' },\n      channel: this.props.gameChannel\n    })\n  }\n\n  render() {\n    const player = this.props.player\n    return (\n      <div className='player-container'>\n        <p className='player-name'>{player.username}</p>\n        <p>Current hand: {player.hand.map(card => card.name).join(', ')}</p>\n        <p>Coins: {player.coins}</p>\n        <div>Actions: {player.actions.map(action => \n          <button onClick={action => this.takeAction(action)} >{action}</button>)}</div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    pubnub: state.connectionReducer.pubnub,\n    gameChannel: state.connectionReducer.gameChannel,\n    isHost: state.connectionReducer.isHost,\n    players: state.connectionReducer.players,\n    deck: state.gameReducer.deck,\n    player: state.playerReducer,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    nextTurn: (() => dispatch({type: 'nextTurn'})),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Player)"]},"metadata":{},"sourceType":"module"}