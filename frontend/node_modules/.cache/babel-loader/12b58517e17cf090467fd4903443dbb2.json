{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudentaccount/Development/Module 5/mod_5_final_project/frontend/src/containers/GameContainer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Game from '../components/Game';\nimport '../components/Game.css';\nimport Board from '../components/Board'; // import Swal from \"sweetalert2\";  \n// import shortid  from 'shortid';\n\nclass GameContainer extends React.Component {\n  constructor(props) {\n    super(props); // // REPLACE with your keys\n    // this.props.pubnub = new PubNubReact({\n    //   publishKey: keys.publishKey, \n    //   subscribeKey: keys.subscribeKey    \n    // });\n\n    this.setUsername = e => {\n      e.preventDefault();\n      this.props.setUsername(e.target[0].value);\n    };\n\n    this.state = {\n      piece: '',\n      // X or O\n      isPlaying: false,\n      // Set to true when 2 players are in a channel\n      isRoomCreator: false,\n      isDisabled: false,\n      myTurn: false\n    };\n    this.lobbyChannel = null; // Lobby channel\n\n    this.gameChannel = null; // Game channel\n\n    this.roomId = null; // Unique id when player creates a room   \n\n    this.props.pubnub.init(this); // Initialize PubNub\n  } // states\n  // Check that the player is connected to a channel\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, \"COUP\"), this.props.username ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 36\n      }\n    }, \"Welcome, \", this.props.username, \"!\") : null, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => this.setUsername(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, \"Set Username\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    pubnub: state.pubnub,\n    username: state.username\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setUsername: username => dispatch({\n      type: 'setUsername',\n      username: username\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameContainer);","map":{"version":3,"sources":["/Users/flatironstudentaccount/Development/Module 5/mod_5_final_project/frontend/src/containers/GameContainer.js"],"names":["React","connect","Game","Board","GameContainer","Component","constructor","props","setUsername","e","preventDefault","target","value","state","piece","isPlaying","isRoomCreator","isDisabled","myTurn","lobbyChannel","gameChannel","roomId","pubnub","init","render","username","mapStateToProps","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAO,wBAAP;AACA,OAAOC,KAAP,MAAkB,qBAAlB,C,CACA;AACA;;AAEA,MAAMC,aAAN,SAA4BJ,KAAK,CAACK,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEjB;AACA;AACA;AACA;AACA;;AANiB,SAwBnBC,WAxBmB,GAwBJC,CAAD,IAAO;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKH,KAAL,CAAWC,WAAX,CAAuBC,CAAC,CAACE,MAAF,CAAS,CAAT,EAAYC,KAAnC;AACD,KA3BkB;;AAQjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AACA;AACXC,MAAAA,SAAS,EAAE,KAFA;AAEO;AAClBC,MAAAA,aAAa,EAAE,KAHJ;AAIXC,MAAAA,UAAU,EAAE,KAJD;AAKXC,MAAAA,MAAM,EAAE;AALG,KAAb;AAOA,SAAKC,YAAL,GAAoB,IAApB,CAfiB,CAeS;;AAC1B,SAAKC,WAAL,GAAmB,IAAnB,CAhBiB,CAgBQ;;AACzB,SAAKC,MAAL,GAAc,IAAd,CAjBiB,CAiBG;;AACpB,SAAKd,KAAL,CAAWe,MAAX,CAAkBC,IAAlB,CAAuB,IAAvB,EAlBiB,CAkBa;AAC/B,GApByC,CAqB1C;AAGA;;;AAMAC,EAAAA,MAAM,GAAG;AACP,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKjB,KAAL,CAAWkB,QAAX,gBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAa,KAAKlB,KAAL,CAAWkB,QAAxB,MAAtB,GAA+D,IAFlE,eAGE;AAAM,MAAA,QAAQ,EAAEhB,CAAC,IAAI,KAAKD,WAAL,CAAiBC,CAAjB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,CAHF,CADF,CADJ;AAYD;;AA3CyC;;AA8C5C,MAAMiB,eAAe,GAAIb,KAAD,IAAW;AACjC,SAAO;AACLS,IAAAA,MAAM,EAAET,KAAK,CAACS,MADT;AAELG,IAAAA,QAAQ,EAAEZ,KAAK,CAACY;AAFX,GAAP;AAID,CALD;;AAOA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLpB,IAAAA,WAAW,EAAIiB,QAAD,IAAcG,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE,aAAP;AAAsBJ,MAAAA,QAAQ,EAAEA;AAAhC,KAAD;AAD/B,GAAP;AAGD,CAJD;;AAMA,eAAexB,OAAO,CAACyB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CvB,aAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\nimport Game from '../components/Game';\nimport '../components/Game.css';\nimport Board from '../components/Board';\n// import Swal from \"sweetalert2\";  \n// import shortid  from 'shortid';\n\nclass GameContainer extends React.Component {\n  constructor(props) {  \n    super(props);\n    // // REPLACE with your keys\n    // this.props.pubnub = new PubNubReact({\n    //   publishKey: keys.publishKey, \n    //   subscribeKey: keys.subscribeKey    \n    // });\n    \n    this.state = {\n      piece: '', // X or O\n      isPlaying: false, // Set to true when 2 players are in a channel\n      isRoomCreator: false,\n      isDisabled: false,\n      myTurn: false,\n    };\n    this.lobbyChannel = null; // Lobby channel\n    this.gameChannel = null; // Game channel\n    this.roomId = null; // Unique id when player creates a room   \n    this.props.pubnub.init(this); // Initialize PubNub\n  }\n  // states\n\n\n  // Check that the player is connected to a channel\n  setUsername = (e) => {\n    e.preventDefault()\n    this.props.setUsername(e.target[0].value)\n  }\n\n  render() {  \n    return (  \n        <div>\n          <div className=\"title\">\n            <p>COUP</p>\n            {this.props.username ? <p>Welcome, {this.props.username}!</p> : null}\n            <form onSubmit={e => this.setUsername(e)}>\n              <input type='text'></input>\n              <button type='submit'>Set Username</button>\n            </form>\n          </div>\n        </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    pubnub: state.pubnub,\n    username: state.username\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setUsername: ((username) => dispatch({type: 'setUsername', username: username}))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameContainer)"]},"metadata":{},"sourceType":"module"}