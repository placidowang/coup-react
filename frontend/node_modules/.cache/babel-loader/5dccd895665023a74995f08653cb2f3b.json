{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudentaccount/Development/Module 5/mod_5_final_project/frontend/src/containers/Player.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './Player.css';\nimport Card from '../components/Card.js';\n\nclass Player extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.yourTurn = () => {\n      return this.props.activePlayer.id === this.props.player.id;\n    };\n\n    this.takeAction = action => {\n      console.log(action);\n\n      switch (action) {\n        case 'Income':\n          if (this.props.treasury >= 1) {\n            this.updateCoins(1); // await this.props.changeTreasury(-amt)\n\n            this.updateTreasury(-1);\n            this.endTurn();\n          } else {\n            console.error('Not enough coins in Treasury');\n          }\n\n          break;\n\n        case 'Foreign Aid':\n          if (this.props.treasury >= 2) {\n            this.alert('');\n            this.updateCoins(2);\n            this.updateTreasury(-2);\n            this.endTurn();\n          } else {\n            console.error('Not enough coins in Treasury');\n          }\n\n          break;\n\n        case 'Tax':\n          if (this.props.treasury >= 3) {\n            this.updateCoins(3);\n            this.updateTreasury(-3);\n            this.endTurn();\n          } else {\n            console.error('Not enough coins in Treasury');\n          }\n\n          break;\n\n        case 'Coup':\n          this.targetPlayer();\n          break;\n\n        case 'alert':\n          if (this.props.player.id !== msg.message.fromPlayerId) {\n            alert(msg.message.message);\n          } else {\n            alert('Waiting for other players.');\n          }\n\n        default:\n          console.error('Invalid player action');\n      }\n    };\n\n    this.updatePlayer = () => {\n      // console.log(this.props.player.coins + 'coins')\n      this.props.pubnub.publish({\n        message: {\n          type: 'updatePlayer',\n          player: this.props.player\n        },\n        channel: this.props.gameChannel\n      });\n    };\n\n    this.updateTreasury = amt => {\n      // console.log(this.props.treasury)\n      this.props.pubnub.publish({\n        message: {\n          type: 'updateTreasury',\n          treasury: this.props.treasury + amt\n        },\n        channel: this.props.gameChannel\n      });\n    };\n\n    this.updateCoins = async amt => {\n      await this.props.updateCoins(amt);\n      this.updatePlayer();\n    };\n\n    this.targetPlayer = () => {};\n\n    this.alertPlayers = msg => {\n      this.props.pubnub.publish({\n        message: {\n          type: 'alert',\n          fromPlayerId: this.props.player.id,\n          message: msg\n        },\n        channel: this.props.gameChannel\n      });\n    };\n\n    this.endTurn = () => {\n      this.props.pubnub.publish({\n        message: {\n          type: 'endTurn'\n        },\n        channel: this.props.gameChannel\n      });\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate() {// console.log(this.props.player)\n  }\n\n  render() {\n    const player = this.props.player;\n    const actions = [];\n\n    for (const action in this.props.player.actions) {\n      actions.push(this.props.player.actions[action]);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-name-hand-coin-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-name-coins-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"player-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, player.username), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"coins\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, \"Coins: \", player.coins)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hand-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, \"Hand \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, player.hand.map(card => /*#__PURE__*/React.createElement(Card, {\n      key: card.id,\n      card: card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 40\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, \"Actions:\", actions.map(action => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions\",\n      key: action.action,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.takeAction(e.target.value),\n      value: action.action,\n      disabled: this.yourTurn() ? '' : 'disabled',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, action.action)))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    pubnub: state.connectionReducer.pubnub,\n    gameChannel: state.connectionReducer.gameChannel,\n    isHost: state.connectionReducer.isHost,\n    players: state.connectionReducer.players,\n    deck: state.gameReducer.deck,\n    treasury: state.gameReducer.treasury,\n    player: state.playerReducer,\n    activePlayer: state.gameReducer.activePlayer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    endTurn: () => dispatch({\n      type: 'endTurn'\n    }),\n    updateCoins: amt => dispatch({\n      type: 'updateCoins',\n      amt: amt\n    }),\n    changeTreasury: amt => dispatch({\n      type: 'changeTreasury',\n      amt: amt\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);","map":{"version":3,"sources":["/Users/flatironstudentaccount/Development/Module 5/mod_5_final_project/frontend/src/containers/Player.js"],"names":["React","connect","Card","Player","Component","yourTurn","props","activePlayer","id","player","takeAction","action","console","log","treasury","updateCoins","updateTreasury","endTurn","error","alert","targetPlayer","msg","message","fromPlayerId","updatePlayer","pubnub","publish","type","channel","gameChannel","amt","alertPlayers","componentDidMount","componentDidUpdate","render","actions","push","username","coins","hand","map","card","e","target","value","mapStateToProps","state","connectionReducer","isHost","players","deck","gameReducer","playerReducer","mapDispatchToProps","dispatch","changeTreasury"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport './Player.css'\nimport Card from '../components/Card.js'\n\nclass Player extends React.Component {\n  componentDidMount() {\n\n  }\n  \n  componentDidUpdate() {\n    // console.log(this.props.player)\n  }\n\n  yourTurn = () => {\n    return (this.props.activePlayer.id === this.props.player.id)\n  }\n\n  // don't need to account for turn anymore; actions are disabled if it's not your turn\n  takeAction = (action) => {\n    console.log(action)\n    switch (action) {\n      case 'Income':\n        if (this.props.treasury >= 1) {\n          this.updateCoins(1)\n          // await this.props.changeTreasury(-amt)\n          this.updateTreasury(-1)\n          this.endTurn()\n        } else {\n          console.error('Not enough coins in Treasury')\n        }\n        break\n      case 'Foreign Aid':\n        if (this.props.treasury >= 2) {\n          this.alert('')\n          this.updateCoins(2)\n          this.updateTreasury(-2)\n          this.endTurn()\n        } else {\n          console.error('Not enough coins in Treasury')\n        }\n        break\n      case 'Tax':\n        if (this.props.treasury >= 3) {\n          this.updateCoins(3)\n          this.updateTreasury(-3)\n          this.endTurn()\n        } else {\n          console.error('Not enough coins in Treasury')\n        }\n        break\n      case 'Coup':\n        this.targetPlayer()\n        break\n      case 'alert':\n        if (this.props.player.id !== msg.message.fromPlayerId) {\n          alert(msg.message.message)\n        } else {\n          alert('Waiting for other players.')\n        }\n      default:\n        console.error('Invalid player action')\n    }\n  }\n\n  updatePlayer = () => {\n    // console.log(this.props.player.coins + 'coins')\n    this.props.pubnub.publish({\n      message: {\n        type: 'updatePlayer',\n        player: this.props.player\n      },\n      channel: this.props.gameChannel\n    })\n  }\n\n  updateTreasury = (amt) => {\n    // console.log(this.props.treasury)\n    this.props.pubnub.publish({\n      message: {\n        type: 'updateTreasury',\n        treasury: this.props.treasury + amt\n      },\n      channel: this.props.gameChannel\n    })\n  }\n\n  updateCoins = async(amt) => {\n    await this.props.updateCoins(amt)\n    this.updatePlayer()\n  }\n\n  targetPlayer = () => {\n\n  }\n\n  alertPlayers = (msg) => {\n    this.props.pubnub.publish({\n      message: {\n        type: 'alert',\n        fromPlayerId: this.props.player.id,\n        message: msg\n      },\n      channel: this.props.gameChannel\n    })\n  }\n\n  endTurn = () => {\n    this.props.pubnub.publish({\n      message: { type: 'endTurn' },\n      channel: this.props.gameChannel\n    })\n  }\n\n  render() {\n    const player = this.props.player\n    const actions = []\n    for (const action in this.props.player.actions) {\n      actions.push(this.props.player.actions[action])\n    }\n    return (\n      <div className='player-container'>\n        <div className='player-name-hand-coin-container'>\n          <div className='player-name-coins-container'>\n            <p className='player-name'>{player.username}</p>\n            <p className='coins'>Coins: {player.coins}</p>\n          </div>\n          <div className='hand-container'>\n            <p>Hand </p>\n            <div className='hand'>\n              {player.hand.map(card => <Card key={card.id} card={card} />)}\n            </div>\n          </div>\n        </div>\n        <div className='actions'>Actions: \n          {actions.map(action => \n            <div className='actions' key={action.action}>\n              <button onClick={e => this.takeAction(e.target.value)} value={action.action} disabled={this.yourTurn() ? '' : 'disabled'}>{action.action}</button>\n            </div>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    pubnub: state.connectionReducer.pubnub,\n    gameChannel: state.connectionReducer.gameChannel,\n    isHost: state.connectionReducer.isHost,\n    players: state.connectionReducer.players,\n    deck: state.gameReducer.deck,\n    treasury: state.gameReducer.treasury,\n    player: state.playerReducer,\n    activePlayer: state.gameReducer.activePlayer,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    endTurn: (() => dispatch({type: 'endTurn'})),\n    updateCoins: ((amt) => dispatch({type: 'updateCoins', amt: amt})),\n    changeTreasury: ((amt) => dispatch({type: 'changeTreasury', amt: amt})),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Player)"]},"metadata":{},"sourceType":"module"}